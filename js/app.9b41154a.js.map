{"version":3,"file":"js/app.9b41154a.js","mappings":"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","sources":["webpack://metrov2/./src/App.vue","webpack://metrov2/./src/App.vue?7ccd","webpack://metrov2/./src/views/HomeView.vue","webpack://metrov2/./src/components/Title.vue","webpack://metrov2/./src/components/Title.vue?1484","webpack://metrov2/./src/components/Timeline.vue","webpack://metrov2/./src/components/Timeline.vue?dfd9","webpack://metrov2/./src/components/Squares.vue","webpack://metrov2/./src/components/Square.vue","webpack://metrov2/./src/requirements/geometry.js","webpack://metrov2/./src/requirements/SVGTextLength.js","webpack://metrov2/./src/components/Square.vue?80a5","webpack://metrov2/./src/components/Squares.vue?b662","webpack://metrov2/./src/views/HomeView.vue?1da1","webpack://metrov2/./src/router/index.js","webpack://metrov2/./src/store/index.js","webpack://metrov2/./src/main.js","webpack://metrov2/webpack/bootstrap","webpack://metrov2/webpack/runtime/chunk loaded","webpack://metrov2/webpack/runtime/compat get default export","webpack://metrov2/webpack/runtime/define property getters","webpack://metrov2/webpack/runtime/global","webpack://metrov2/webpack/runtime/hasOwnProperty shorthand","webpack://metrov2/webpack/runtime/node module decorator","webpack://metrov2/webpack/runtime/publicPath","webpack://metrov2/webpack/runtime/jsonp chunk loading","webpack://metrov2/webpack/startup"],"sourcesContent":["<template>\n  <router-view/> <!-- 把路由对应过来，router/index.js中定义的当前的页面 -->\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  width: min(100vw, calc(100vh / 9 * 16));\n  height: min(100vh, calc(100vw / 16 * 9)); /* css中不同单位也可以做计算，但是符号左右两边要空格，是规范，如calc(100vh - 16px)🐱 */\n}\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  margin: 0; /* 浏览器默认会有边距，在这里去掉🐱 */\n  background-color: #000;\n  overflow: hidden;\n}\n@font-face {\n  font-family: 'HelveticaNeue';\n  src: url('@/assets/fonts/HelveticaNeue.ttc');\n}\n@font-face {\n  font-family: 'SourceHanSansCN';\n  src: url('@/assets/fonts/SourceHanSansCN-Normal.otf');\n}\n\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=66a21788\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=66a21788&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <svg class=\"home\">\n    <defs>\n      <filter id=\"Gaussian_Blur\">\n        <feGaussianBlur in=\"SourceGraphic\">\n          <animate attributeName=\"stdDeviation\" values=\"0;0.5;2;4\" :dur=\"`${duration/1000}s`\" calcMode=\"paced\" fill=\"freeze\" />\n        </feGaussianBlur>\n      </filter>\n      <filter id=\"Initial_Blur\">\n        <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"0\" />\n      </filter>\n    </defs>\n\n    <Title\n      :filter=\"citySelected === null ? 'url(#Initial_Blur)' : 'url(#Gaussian_Blur)'\"\n      :opacity=\"citySelected === null ? 1 : 0.5\"\n      :transform='`translate(${paddingX}, ${paddingY})`'\n      :width=\"innerWidth\"\n      :height=\"titleHeight\"\n      :totalHeight=\"height\"\n      :totalWidth=\"width\"\n    ></Title>\n\n    <template v-if=\"data !== null\"> <!-- template实际上不会渲染到页面上，这里的作用主要是把两个部分组合起来适用v-if-->\n      <Timeline\n        v-if=\"citySelected === null\"\n        :transform='`translate(${paddingX}, ${paddingY + titleHeight + timelineHeight * 0})`'\n        :width=\"innerWidth\"\n        :height=\"timelineHeight * 0.5\"\n        :paddingX=\"paddingX\"\n        :totalHeight=\"height\"\n        :totalWidth=\"width\"\n      />\n      <!-- !!!!! `translate(${paddingX}, ${paddingY + titleHeight + timelineHeight * 0.5})` -->\n\n      <Squares\n        :filter=\"citySelected === null ? 'url(#Initial_Blur)' : 'url(#Gaussian_Blur)'\"\n        :transform='`translate(${paddingX}, ${paddingY + titleHeight + timelineHeight * 0.5})`'\n        :width=\"innerWidth\"\n        :height=\"squaresHeight*1.1\"\n        :globalX=\"paddingX\"\n        :globalY=\"paddingY + titleHeight + timelineHeight\"\n        :globalWidth=\"width\"\n        :globalHeight=\"height\"\n      />\n      <!-- !!!!! '`translate(${paddingX}, ${paddingY + titleHeight + timelineHeight })`' -->\n      <!-- !!!!! height=\"squaresHeight -->\n    </template>\n    \n    <foreignObject v-else\n      :x=\"paddingX\"\n      :y=\"paddingY + titleHeight\"\n      :width=\"innerWidth\"\n      :height=\"timelineHeight + squaresHeight\"\n    >\n      <div v-loading=\"true\" :style=\"{ width: '100%', height: titleHeight + timelineHeight + squaresHeight + 'px'}\"></div>\n    </foreignObject>\n\n    <foreignObject\n      :transform='`translate(${ innerWidth* 0.88}, ${paddingY + titleHeight + timelineHeight + squaresHeight})`'\n      :style=\"{ color: 'white', fontSize: innerWidth * 0.005, width: innerWidth * 0.12 + 'px', height: squaresHeight  * 0.05 + 'px'}\"\n      >\n      <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"link-container\">\n        <a href=\"mailto:globalmetro@163.com?subject=Metro Line Issue Found_[date]&body=Mistakes: \">\n          Email us for any mistakes.\n        </a>\n      </div>\n    </foreignObject>\n\n    <foreignObject \n      :transform='`translate(${ innerWidth* 0.95}, ${paddingY + titleHeight + timelineHeight + squaresHeight})`'\n      :style=\"{ color: 'white', fontSize: innerWidth * 0.005, width: innerWidth * 0.12 + 'px', height: squaresHeight  * 0.05 + 'px'}\"\n      >\n      <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"link-container\">\n        <a href=\"https://zh.wikipedia.org/zh-hans/%E5%9C%B0%E9%90%B5%E5%88%97%E8%A1%A8\" target=\"_blank\">\n          <!-- 数据来源：维基百科 | 全球地铁列表 -->\n          Data from Wikipedia | List of Metro Systems\n        </a>\n      </div>\n    </foreignObject>\n\n    <rect id=\"mask\" v-if=\"citySelected !== null\"\n      :x=0\n      :y=0\n      :width=\"innerWidth*2\"\n      :height=\"innerHeight*2\"\n      fill=\"black\"\n      opacity=\"0.8\"\n    ></rect>\n    <g id=\"singleCity\"\n       :transform='`translate(${paddingX}, ${paddingY + titleHeight + timelineHeight})`'\n    ></g>\n    <Timeline v-if=\"citySelected !== null && lineSelected === null\"\n        :transform='`translate(${paddingX}, ${paddingY + titleHeight + timelineHeight * 0})`'\n        :width=\"innerWidth\"\n        :height=\"timelineHeight * 0.5\"\n        :totalHeight=\"height\"\n        :totalWidth=\"width\"\n        :paddingX=\"paddingX\"\n        :opacity=\"0.7\"\n        :z-index = \"1\"\n    />\n    <!-- !!!!! '`translate(${paddingX}, ${paddingY + titleHeight + timelineHeight * 0.5})`' -->\n  </svg>\n</template>\n\n<script>\nimport Title from \"@/components/Title.vue\"\nimport Timeline from \"@/components/Timeline.vue\"\nimport Squares from \"@/components/Squares.vue\"\nimport { mapState } from \"vuex\"\n\nconst getWidth = () => document.getElementById(\"app\").clientWidth;\nconst getHeight = () => document.getElementById(\"app\").clientHeight;\n\nexport default {\n  name: 'HomeView',\n  components: {\n    Title,\n    Timeline,\n    Squares,\n  },\n  data () {\n    return {\n      width: getWidth(),\n      height: getHeight(),\n    }\n  },\n  computed: {\n    ...mapState([\n      \"data\",\n      \"citySelected\",\n      \"duration\",\n      \"lineHovered\",\n      \"lineClicked\",\n    ]),\n    lineSelected() {\n      return this.lineHovered ?? this.lineClicked;\n    },\n    paddingX() {\n      return this.width * 45 / 1080;\n    },\n    paddingY() {\n      return this.height * 54 / 1080;\n    },\n    titleHeight() {\n      return this.height * 146 / 1080;\n    },\n    timelineHeight() {\n      return this.height * 54 / 1080;\n    },\n    squaresHeight() {\n      return this.height - this.paddingY * 2 - this.titleHeight - this.timelineHeight;\n    },\n    innerWidth() {\n      return this.width - this.paddingX * 2;\n    },\n    innerHeight() {\n      return this.height - this.paddingY * 2;\n    },\n  },\n  methods: {\n    resize() {\n      this.width = getWidth();\n      this.height = getHeight();\n    },\n  },\n  mounted() {\n    window.addEventListener('resize', this.resize.bind(this));\n  },\n}\n</script>\n<style>\n.home {\n  width: 100%;\n  height: 100%;\n}\n.el-loading-mask {\n  background-color: transparent !important;\n}\n\n.link-container a {\n  color: #ffffff; /* 设置文字颜色为白色 */\n  opacity: 0.8;\n  text-decoration: underline; /* 设置下划线 */\n}\n\n</style>\n","<template>\n    <g id=\"title\">\n        <!-- <rect\n            :width=\"width\"\n            :height=\"height\"\n            fill=\"red\"\n        ></rect> -->\n        <text class=\"maintitle\"\n            :y=\"titleFontsize * 0.15\"\n            dominant-baseline=\"hanging\"\n            :font-size=\"titleFontsize\"\n            font-family=\"HelveticaNeue\"\n            font-weight=\"bold\"\n            style=\"fill: white;\"\n        >Global Metro Line Development History</text>\n        <!-- !!!!! SourceHanSansCN -->\n        <!-- !!!!! 全球地铁线路发展历史 -->\n\n        <text class=\"additionalInfoText\"\n          :x=\"titleFontsize * 20\"\n          :y=\"titleFontsize * 0.15 + titleFontsize * 0.8\"\n          dominant-baseline=\"baseline\"\n          :font-size=\"infoFontSize\"\n          font-family=\"HelveticaNeue\"\n          style=\"fill: white;\"\n        >\n          In\n          <tspan :font-size=\"titleFontsize\">{{timeRange === null ? 2023 : (new Date(timeRange[1])).getFullYear()}}</tspan>,\n          <tspan :font-size=\"titleFontsize\">{{metroLinesCount === null ? 873 : metroLinesCount}}</tspan>\n          metro lines were built in\n          <tspan :font-size=\"titleFontsize\">{{citiesCount === null ? 213 : citiesCount}}</tspan>\n          cities.\n        </text>\n        <foreignObject\n            :y=\"searchY\"\n            :width=\"searchWidth1  + marginSearchButton1 + searchWidth2  + marginSearchButton2 + searchWidth3  + marginSearchButton3 + buttonWidth + buttonTextWidth\"\n            :height=\"searchHeight\"\n        >\n          <div style=\"display: flex; flex-direction: row; align-items: center\">\n            <el-autocomplete\n                class=\"search-box-continent\"\n                v-model=\"searchTextContinent\"\n                :fetch-suggestions=\"getContinents\"\n                placeholder=\"All Continents\"\n                @select=\"selectContinent\"\n                :trigger-on-focus=\"true\"\n                :style=\"{width: searchWidth1 + 'px', height: searchHeight + 'px'}\"\n                value-key=\"name\"\n            >\n              <template #suffix>\n                <el-icon class=\"el-input__icon\"><Search/></el-icon>\n              </template>\n              <template #default=\"{ item }\">\n                <div>{{ item.nameEn }}</div>\n              </template>\n            </el-autocomplete>\n\n            <el-autocomplete\n                class=\"search-box\"\n                v-model=\"searchText\"\n                :fetch-suggestions=\"getCountries\"\n                placeholder=\"All Countries\"\n                @select=\"selectCountry\"\n                :trigger-on-focus=\"true\"\n                :style=\"{width: searchWidth2 + 'px', height: searchHeight + 'px',  marginLeft: marginSearchButton1 + 'px'}\"\n                value-key=\"name\"\n            >\n              <template #suffix>\n                <el-icon class=\"el-input__icon\"><Search/></el-icon>\n              </template>\n              <template #default=\"{ item }\">\n                <div>{{ item.nameEn }}</div>\n              </template>\n            </el-autocomplete>\n\n            <el-autocomplete\n                class=\"search-box-city\"\n                v-model=\"searchTextCity\"\n                :fetch-suggestions=\"getCities\"\n                placeholder=\"All Cities\"\n                @select=\"selectCity\"\n                :trigger-on-focus=\"true\"\n                :style=\"{width: searchWidth3 + 'px', height: searchHeight + 'px',  marginLeft: marginSearchButton2 + 'px'}\"\n                value-key=\"name\"\n            >\n              <template #suffix>\n                <el-icon class=\"el-input__icon\"><Search/></el-icon>\n              </template>\n              <template #default=\"{ item }\">\n                <div>{{ item.nameEn }}</div>\n              </template>\n            </el-autocomplete>\n            <!-- <button class=\"button\" :style=\"{ width: buttonWidth + 'px', height: searchHeight + 'px' }\" @click=\"toggleLineColor\">Line Color</button> -->\n\n            <svg class=\"switch-container\"\n                 style=\"margin-left: 1em; cursor: pointer\"\n                 :width=\"buttonWidth\"\n                 :height=\"searchHeight\"\n                 @click=\"toggleLineColor\"\n            >\n              <rect class=\"background\"\n                    :x=\"1\"\n                    :y=\"1\"\n                    :width=\"buttonWidth - 2\"\n                    :height=\"searchHeight - 2\"\n                    :rx=\"Math.min(buttonWidth - 2, searchHeight - 2) * 0.5\"\n                    :ry=\"Math.min(buttonWidth - 2, searchHeight - 2) * 0.5\"\n                    stroke=\"#fff\"\n                    stroke-width=\"1\"\n              ></rect>\n\n              <g class=\"switch\">\n                <image :href=\"logoRGB\"\n                       :transform=\"`translate(${2}, ${2})`\"\n                       :style=\"{\n                          width: Math.min(buttonWidth - 4, searchHeight - 4) + 'px',\n                          height: Math.min(buttonWidth - 4, searchHeight - 4) + 'px',\n                          opacity: 1,\n                       }\"\n                ></image>\n                <image :href=\"logoGray\"\n                       :transform=\"`translate(${2}, ${2})`\"\n                       :style=\"{\n                          width: Math.min(buttonWidth - 4, searchHeight - 4) + 'px',\n                          height: Math.min(buttonWidth - 4, searchHeight - 4) + 'px',\n                          opacity: 0,\n                       }\"\n                ></image>\n              </g>\n            </svg>\n\n            <span style=\"color: #fff;\" :style=\"{ fontSize: buttonTextFontSize + 'px', marginLeft: buttonTextFontSize * 0.5 + 'px' }\">Color Mode</span>\n          </div>\n\n<!--            <el-button-->\n<!--                class=\"el-button\"-->\n<!--                @click=\"toggleLineColor\"-->\n<!--                :style=\"{width: buttonWidth + 'px', height: searchHeight + 'px', marginLeft: marginSearchButton3 + 'px'}\"-->\n<!--            >-->\n<!--                Color-->\n<!--            </el-button>-->\n\n\n\n        </foreignObject>\n\n        <text class=\"subtitle\" \n            :y=\"subtitleY\"\n            dominant-baseline=\"hanging\"\n            :font-size=\"subtitleFontsize\"\n            font-family=\"HelveticaNeue\"\n            font-weight=\"bold\"\n            style=\"fill: white;\"\n        ></text>\n        <!-- Global Cities Subway Route Maps -->\n        \n        <!-- <image \n            :x=\"legendX\"\n            :href=\"legend\"\n            :height=\"legendHeight\"\n            :width=\"legendWidth\"\n        ></image> -->\n\n        <!-- <image \n            :x=\"legendX1\"\n            :href=\"legendone\"\n            :height=\"legendHeight1\"\n            :width=\"legendWidth1\"\n        ></image>\n\n        <image \n            :x=\"legendX2\"\n            :href=\"legendtwo\"\n            :height=\"legendHeight2\"\n            :width=\"legendWidth2\"\n        ></image> -->\n\n        <!-- <image \n            :x=\"legendX3\"\n            :href=\"legendthree\"\n            :height=\"legendHeight3\"\n            :width=\"legendWidth3\"\n        ></image> -->\n\n        <image\n            :x=\"legendX4\"\n            :href=\"legendfour\"\n            :height=\"legendHeight4\"\n            :width=\"legendWidth4\"\n        ></image>\n\n        <image\n            :x=\"legendX5\"\n            :href=\"legendfive\"\n            :height=\"legendHeight5\"\n            :width=\"legendWidth5\"\n        ></image>\n       \n    </g>\n</template>\n<script>\nimport * as d3 from \"d3\";\nimport { Search } from '@element-plus/icons-vue';\nimport { reactive } from 'vue';\nimport { mapState, mapActions } from 'vuex';\nimport { ElButton } from 'element-plus';\nconst legendone = require('@/assets/legendone.svg'); //330 x 103\nconst legendtwo = require('@/assets/legendtwo.svg'); //111 x 103\nconst legendthree = require('@/assets/legendthree.svg'); //172 x 103\nconst legendfour = require('@/assets/legendfour.svg'); //178 x104\nconst legendfive = require('@/assets/legendfive.svg'); //171 x 101\n\nconst logoRGB = require(\"@/assets/logo-rgb.png\");\nconst logoGray = require(\"@/assets/logo-gray.png\");\n\nexport default {\n    name: 'Title',\n    data() {\n        return {\n            legendone: legendone,\n            legendtwo: legendtwo,\n            legendthree: legendthree,\n            legendfour: legendfour,\n            legendfive: legendfive,\n            searchTextContinent: \"\",\n            searchText: \"\",\n            searchTextCity: \"\",\n            isButtonClicked: false,\n\n\n            logoRGB,\n            logoGray,\n        }\n    },\n\n    components: {\n        Search,\n        ElButton,\n        reactive\n    },\n    props: {\n        width: {\n            type: Number,\n            default: 0,\n        },\n        height: {\n            type: Number,\n            default: 0,\n        },\n        totalWidth: {\n            type: Number,\n            default: 0,\n        },\n        totalHeight: {\n            type: Number,\n            default: 0,\n        },\n\n    },\n    computed: {\n        // ...mapState([\n        //     \"data\",\n        //     \"continentSelected\",\n        //     \"countrySelected\",\n        //     \"citySelectedButton\",\n        //     \"metroLinesCount\",\n        //     \"citiesCount\",\n        //     \"timeRange\",\n        // ]),\n        ...mapState({\n            data: state => state.data,\n            continentSelected: state => state.continentSelected,\n            countrySelected: state => state.countrySelected,\n            citySelectedButton: state => state.citySelectedButton,\n            metroLinesCount: state => state.metroLinesCount,\n            citiesCount: state => state.citiesCount,\n            timeRange: state => state.timeRange,\n            isBlackClicked: state => state.isBlackClicked,\n        }),\n        infoFontSize() {\n          return this.titleFontsize * 0.5;\n        },\n        buttonTextFontSize() {\n            return this.searchHeight * 0.6;\n        },\n        buttonTextWidth() {\n            return this.buttonTextFontSize * 10;\n        },\n        continents() {\n            return Array.from(\n                // new Set(this.data.map(d => d[\"洲\"].split(\" \")[0]))  // !!!!!\n                new Set(this.data.map(d => d[\"洲英文\"].split(\", \")[1]))\n            );\n        },\n        countries() {\n            return Array.from(\n                // new Set(this.data.map(d => d[\"城市名称\"].split(\" \")[0]))  // !!!!!\n                new Set(this.data.map(d => d[\"城市英文标准\"].split(\", \")[1]))\n            );\n        },\n        cities() {\n            return Array.from(\n                // new Set(this.data.map(d => d[\"城市\"].split(\" \")[0]))  // !!!!!\n                new Set(this.data.map(d => d[\"城市英文标准\"].split(\", \")[0]))\n            );\n        },\n        // countries() {\n        //     return Array.from(\n        //         new Set(this.data.map(d => d[\"城市英文\"].split(\" \")[0]))\n        //     );\n        // },\n        // cities() {\n        //     return Array.from(\n        //         new Set(this.data.map(d => d[\"城市英文\"].split(\" \")[1]))\n        //     );\n        // },\n        titleFontsize() {\n            return this.totalHeight * 25.45 / 1080;\n        },\n        subtitleY() {\n            return this.totalHeight * 27 / 1080;\n        },\n        subtitleFontsize() {\n            return this.totalHeight * 23.36 / 1080;\n        },\n\n        legendX1() {\n            return this.totalWidth * 600 / 1920;\n        },\n        legendHeight1() {\n            return this.totalHeight * 103 / 1080;\n        },\n        legendWidth1() {\n            return this.totalWidth * 330 / 1920;\n        },\n\n        legendX2() {\n            return this.totalWidth * 996 / 1920;\n        },\n        legendHeight2() {\n            return this.totalHeight * 103 / 1080;\n        },\n        legendWidth2() {\n            return this.totalWidth * 111 / 1920;\n        },\n\n        legendX3() {\n            return this.totalWidth * 1194 / 1920;\n        },\n        legendHeight3() {\n            return this.totalHeight * 103 / 1080;\n        },\n        legendWidth3() {\n            return this.totalWidth * 172 / 1920;\n        },\n\n        legendX4() {\n            return this.totalWidth * 1402 / 1920;\n        },  \n        legendHeight4() {\n            return this.totalHeight * 101*0.86 / 1080;  //!!!!! 104\n        },\n        legendWidth4() {\n            return this.totalWidth * 178 / 1920;\n        },\n\n        legendX5() {\n            return this.totalWidth * 1589 / 1920;\n        },\n        legendHeight5() {\n            return this.totalHeight * 101*0.78 / 1080;  //!!!!! 101\n        },\n        legendWidth5() {\n            return this.totalWidth * 171 / 1920;\n        },\n\n        searchY() {\n            return this.totalHeight * 50 / 1080; //67 !!!!!\n        },\n        searchHeight() {\n            return this.totalHeight * 34 / 1080;\n        },\n        searchWidth() {\n            return this.totalWidth * 688 / 1920; // 344 !!!!!\n        },\n        searchWidth1() {\n            return this.totalWidth * 300 / 1920; // 344 !!!!!\n        },\n        marginSearchButton1(){\n            return this.totalWidth * 10 / 1920;\n        },\n        searchWidth2() {\n            return this.totalWidth * 300 / 1920; // 344 !!!!!\n        },\n        marginSearchButton2(){\n            return this.totalWidth * 10 / 1920;\n        },\n        searchWidth3() {\n            return this.totalWidth * 300 / 1920; // 344 !!!!!\n        },\n        marginSearchButton3(){\n            return this.totalWidth * 20 / 1920;\n        },\n        buttonWidth(){\n            return this.totalWidth * 65 / 1920;\n        },\n    },\n    methods: {\n        ...mapActions([\n            \"updateContinentSelected\",\n            \"updateCountrySelected\",\n            \"updateCitySelectedButton\",\n            \"updateMetroLinesCount\",\n            \"updateCitiesCount\",\n            \"updateTimeRange\",\n        ]),\n\n        // 逻辑：\n        // 1. 如果选择了洲，则国家和城市只展示这个洲的\n        // 2. 如果选择了国家，则洲（只有一个）和城市只展示这个国家的\n        // 3. 如果选择了城市，则国家（只有一个）和洲（只有一个）只展示这个城市的\n        // 4. 优先城市，即只要城市不为空，则即使选择了国家或洲，仍然只筛选一个城市\n        // 5. 如果城市为空，则优先国家，即只要国家不为空，则即使选择了洲，仍然只筛选一个国家\n        // 6. all 始终存在，始终可返回all\n        // 7. 如果文本框里是all，则展示所有符合约束条件的选项\n\n        getContinents(queryString, cb) {\n            let continents = this.continents.map(c => {\n                // const continentData = this.data.find(d => d[\"洲\"].split(\" \")[0] === c);\n                const continentData = this.data.find(d => d[\"洲英文\"].split(\", \")[1] === c);\n                return { nameEn: c, nameCn: continentData[\"洲\"].split(\" \")[0] };\n            });\n\n            if (this.countrySelected !== null) {\n                // continents = continents.filter(c => this.data.find(d => d[\"城市名称\"].split(\" \")[0] === this.countrySelected && d[\"洲\"].split(\" \")[0] === c.name));\n                continents = continents.filter(c => this.data.find(d => d[\"城市英文标准\"].split(\", \")[1] === this.countrySelected&& d[\"洲英文\"].split(\", \")[1] === c.nameEn));\n            }\n            if (this.citySelectedButton !== null) {\n                // continents = continents.filter(c => this.data.find(d => d[\"城市\"].split(\" \")[0] === this.citySelectedButton && d[\"洲\"].split(\" \")[0] === c.name));\n                continents = continents.filter(c => this.data.find(d => d[\"城市英文标准\"].split(\", \")[0] === this.citySelectedButton && d[\"洲英文\"].split(\", \")[1] === c.nameEn));\n            }\n            const result = continents.filter(c => c.nameEn.toLowerCase().includes(queryString.toLowerCase()) || c.nameCn.includes(queryString));\n\n            // 将 \"全部\" 这个选项添加到结果列表的顶部\n            result.unshift({ nameEn: \"All Continents\", nameCn: \"全部洲\" });\n\n            cb(result);\n        },\n        selectContinent(continent) {\n            this.updateContinentSelected(continent.nameEn === \"All Continents\" ? null : continent.nameEn);\n            // 如果选择了 \"All Continents\"，则清空 searchTextContinent\n            this.searchTextContinent = continent.nameEn === \"All Continents\" ? '' : continent.nameEn;\n        },\n\n\n        getCountries(queryString, cb) {\n            let countries = this.countries.map(c => {\n                // const countryData = this.data.find(d => d[\"城市名称\"].split(\" \")[0] === c);\n                const countryData = this.data.find(d => d[\"城市英文标准\"].split(\", \")[1] === c);\n                return { nameEn: c, nameCn: countryData[\"城市名称\"].split(\" \")[0] };\n            });\n            // !!!!! data中的新加坡改成“Singapore Singapore”的了，否则会报错\n            \n            if (this.continentSelected !== null) {\n                // countries = countries.filter(c => this.data.find(d => d[\"洲\"].split(\" \")[0] === this.continentSelected && d[\"城市名称\"].split(\" \")[0] === c.name));\n                countries = countries.filter(\n                    c => this.data.find(d => d[\"洲英文\"].split(\", \")[1] === this.continentSelected\n                       && d[\"洲英文\"].split(\", \")[0] === c.nameEn));\n            }\n            if (this.citySelectedButton !== null) {\n                // countries = countries.filter(c => this.data.find(d => d[\"城市\"].split(\" \")[0] === this.citySelectedButton && d[\"城市名称\"].split(\" \")[0] === c.name));\n                countries = countries.filter(c => this.data.find(d => d[\"城市英文标准\"].split(\", \")[0] === this.citySelectedButton && d[\"洲英文\"].split(\", \")[0] === c.nameEn));\n            }\n            const result = countries.filter(c => c.nameEn.toLowerCase().includes(queryString.toLowerCase()) || c.nameCn.includes(queryString));\n            result.unshift({ nameEn: \"All Countries\", nameCn: \"全部国家\" });\n\n            cb(result);\n        },\n        selectCountry(country) {\n            this.updateCountrySelected(country.nameEn === \"All Countries\" ? null : country.nameEn);\n            this.searchText = country.nameEn === \"All Countries\" ? '' : country.nameEn;\n        },\n\n        getCities(queryString, cb) {\n            let cities = this.cities.map(c => {\n                // const cityData = this.data.find(d => d[\"城市\"].split(\" \")[0] === c);\n                const cityData = this.data.find(d => d[\"城市英文标准\"].split(\", \")[0] === c);\n                return { nameEn: c, nameCn: cityData[\"城市\"].split(\" \")[0] };\n            });\n\n            // 如果选中了一个洲，那么只保留与该洲相关的城市\n            if (this.continentSelected !== null) {\n                // cities = cities.filter(c => this.data.find(d => d[\"洲\"].split(\" \")[0] === this.continentSelected && d[\"城市\"].split(\" \")[0] === c.name));\n                cities = cities.filter(c => this.data.find(d => d[\"洲英文\"].split(\", \")[1] === this.continentSelected && d[\"城市英文标准\"].split(\", \")[0] === c.nameEn));\n            }\n            // 如果选中了一个国家，那么只保留与该国家相关的城市\n            if (this.countrySelected !== null) {\n                // cities = cities.filter(c => this.data.find(d => d[\"城市名称\"].split(\" \")[0] === this.countrySelected && d[\"城市\"].split(\" \")[0] === c.name));\n                cities = cities.filter(c => this.data.find(d => d[\"城市英文标准\"].split(\", \")[1] === this.countrySelected && d[\"城市英文标准\"].split(\", \")[0] === c.nameEn));\n            }\n            const result = cities.filter(c => c.nameEn.toLowerCase().includes(queryString.toLowerCase()) || c.nameCn.includes(queryString));\n            result.unshift({ nameEn: \"All Cities\", nameCn: \"全部城市\" });\n\n            cb(result);\n        },\n        selectCity(city) {\n            // this.searchTextCity = city.name + ' ' + city.nameEn;  // !!!!!\n            this.updateCitySelectedButton(city.nameEn === \"All Cities\" ? null : city.nameEn);\n            this.searchTextCity = city.nameEn === \"All Cities\" ? '' : city.nameEn;\n            \n        },\n\n\n        toggleLineColor() {\n            const icons = d3.select(this.$el).select(\".switch\")\n                .selectAll(\"image\");\n            let x = this.isBlackClicked ? 2 : this.buttonWidth - 2 - Math.min(this.buttonWidth - 4, this.searchHeight - 4);\n            icons.transition()\n                .duration(300)\n                .attr(\"x\", x)\n                .each((d, i, elements) => {\n                  const image = d3.select(elements[i]);\n                  if (i === 1) { // 黑白的\n                    image.style(\"opacity\", this.isBlackClicked ? 0 : 1);\n                  }\n                  else { // 彩色的\n                    image.style(\"opacity\", this.isBlackClicked ? 1 : 0);\n                  }\n                })\n            this.$store.dispatch('updateIsBlackClicked', !this.$store.state.isBlackClicked);\n        },\n    },\n    mounted() {\n        // console.log(this.data);\n        // console.log(this.timeRange, typeof this.timeRange);\n    },\n    watch: {\n        // timeRange: {\n        //     handler(val) {\n        //         this.updateTimeRange(val);\n        //     }\n        // },\n        searchTextContinent: {\n            handler(val) {\n                if (val === \"\") {\n                    this.updateContinentSelected(null);\n                }\n            }\n        },\n        searchText: {\n            handler(val) {\n                if (val === \"\") {\n                    this.updateCountrySelected(null);\n                }\n            }\n        },\n        searchTextCity: {\n            handler(val) {\n                if (val === \"\") {\n                    this.updateCitySelectedButton(null);\n                }\n            }\n        },\n    },\n}\n</script>\n<style>\n.el-input {\n    height: v-bind(searchHeight - 2 + 'px');\n}\n.el-input .el-input__wrapper {\n    background-color: #000;\n    border-radius: 0  !important;\n}\n/*\n.el-input__inner:focus {\n    outline: none !important;  \n    border-color: rgba(255, 255, 255, 0.8) !important;  \n}\n*/\n.el-scrollbar__wrap {\n    background-color: #000 !important;\n    border: 0 !important;  /* 设置边框宽度为 0 */\n    margin: 0 !important;  /* 设置边距为 0 */\n    padding: 0 !important;  /* 设置填充为 0 */\n}\n\n.el-scrollbar__view li {\n    color: rgba(255, 255, 255, 0.8) !important;\n    border: 0.5px solid rgba(255, 255, 255, 0.5) !important;\n}\n.el-scrollbar__view li:hover {\n    background-color: rgba(255, 255, 255, 0.1) !important;\n    color: #fff !important;\n}\n\n\n.el-button {\n    height: v-bind(searchHeight - 2 + 'px') !important;\n    background-color: #000 !important;\n    border: 1px solid rgba(255, 255, 255, 0.9) !important;\n    color: rgba(255, 255, 255, 0.7) !important;\n    border-radius: 0  !important;\n}\n\n.el-button:active {\n    border-color: rgba(255, 255, 255, 0.5) !important;\n    color: rgba(255, 255, 255, 0.5) !important;\n}\n\n</style>\n","import { render } from \"./Title.vue?vue&type=template&id=342c9682\"\nimport script from \"./Title.vue?vue&type=script&lang=js\"\nexport * from \"./Title.vue?vue&type=script&lang=js\"\n\nimport \"./Title.vue?vue&type=style&index=0&id=342c9682&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <g class=\"timeline\">\n        <!-- <rect\n            :width=\"width\"\n            :height=\"height\"\n            fill=\"blue\"\n        ></rect> -->\n    </g>\n</template>\n  \n<script>\nimport { ref, onMounted, watch, computed } from 'vue'\nimport {mapActions, mapMutations, mapState} from 'vuex'\nimport * as d3 from 'd3'\n\nexport default {\n    name: 'Timeline',\n    props: {\n      width: {\n        type: Number,\n        default: 0,\n      },\n      height: {\n        type: Number,\n        default: 0,\n      },\n      paddingX: {\n        type: Number,\n        default: 0,\n      },\n      totalWidth: {\n        type: Number,\n        default: 0,\n      },\n      totalHeight: {\n        type: Number,\n        default: 0,\n      },\n    },\n    data() {\n      return {\n        drag: null,\n        carPath: \"M27.996 13.6625C27.9833 13.5238 27.6603 10.2281 25.8078 6.89257C24.7025 4.90295 23.2814 3.31251 21.5832 2.16616C19.4549 0.728822 16.9044 0 14.003 0H3.31819C1.49185 0 0.00596582 1.45921 0.00596582 3.25236V6.6754C0.00198861 6.70978 0 6.74454 0 6.7793C0 6.81406 0.00198861 6.84882 0.00596582 6.8828V13.7457C0.00596582 15.5392 1.49185 16.9984 3.31819 16.9984H5.63572C5.65321 16.9992 5.67071 17 5.68821 17C5.70571 17 5.72321 16.9992 5.74032 16.9984H24.6882C26.5145 16.9984 28 15.5392 28 13.7457C28 13.718 27.9988 13.6902 27.996 13.6625Z M23.7141 7.02538H13.7822V5.27598H22.2831C22.311 5.27598 22.338 5.27441 22.3655 5.27246C22.8535 5.79857 23.3037 6.38405 23.7141 7.02578V7.02538Z M1.88086 13.7456V7.7002H4.75042V15.1568H3.31823C2.52557 15.1568 1.88126 14.5236 1.88126 13.7456H1.88086Z M24.6878 15.1565H6.62528V6.77892C6.62528 6.27039 6.20568 5.85833 5.68785 5.85833H1.88086V3.25199C1.88086 2.47395 2.52517 1.84082 3.31783 1.84082H14.0026C16.34 1.84082 18.3994 2.37631 20.1315 3.43282H12.8449C12.327 3.43282 11.907 3.84528 11.907 4.35381V7.94481C11.907 8.45334 12.3266 8.8654 12.8449 8.8654H24.6274C24.6552 8.8654 24.6822 8.86384 24.7089 8.86189C25.8046 11.2683 26.0866 13.461 26.1236 13.7867C26.1009 14.5456 25.4654 15.1557 24.6874 15.1557L24.6878 15.1565Z\", // 完整的SVG路径字符串\n      };\n    },\n    computed: {\n      ...mapState({\n        data:(state) => state.data,\n        timeRange: (state) => state.timeRange, //传入timeRange\n        metroLinesCount: (state) => state.metroLinesCount,\n        citiesCount: (state) => state.citiesCount,\n      }),\n      size() {\n        return {\n            width: this.width,\n            height: this.height,\n        }\n      },\n      //定义全部时间区域timeRangeWhole()\n      timeRangeWhole() {\n        const lines = this.data.map(city => {\n          const ls = city[\"地铁线路\"];\n          return ls.map(l => {\n            return {\n              name: l[\"线路\"],\n              date: new Date(l[\"首发时间\"]),\n            };\n          });\n        }).flat().sort((a, b) => a.date - b.date);\n        return [\n          d3.min(lines, (d) => new Date(d.date)),\n          d3.max(lines, (d) => new Date(d.date)),\n        ];\n      },\n\n    },\n    methods: {\n        ...mapActions([\n            'updateTimeRange', //传入timeRange方法\n            'updateTimelineOnDrag',\n            'updateMetroLinesCount',\n            'updateCitiesCount',\n        ]),\n        calculateCounts(timeRange) {\n          // 使用 map 和 filter 以函数式编程方式获取符合时间范围内的地铁线路\n          const metroLinesCount = this.data.map(city => {\n            const ls = city[\"地铁线路\"];\n            return ls.filter(l => {\n              const date = new Date(l[\"首发时间\"]);\n              return date >= timeRange[0] && date <= timeRange[1];\n            }).length;\n          }).reduce((a, b) => a + b, 0); // 使用 reduce 以函数式编程方式计算总数\n\n          const citiesCount = this.data.filter(city => {\n            const ls = city[\"地铁线路\"];\n            return ls.some(l => {\n              const date = new Date(l[\"首发时间\"]);\n              return date >= timeRange[0] && date <= timeRange[1];\n            });\n          }).length;\n\n          // 更新 Vuex store 状态\n          this.updateMetroLinesCount(metroLinesCount);\n          this.updateCitiesCount(citiesCount);\n          // console.log(this.data);\n          console.log(`Current metro lines count: ${metroLinesCount}`);\n          console.log(`Current cities count: ${citiesCount}`);\n        },\n        drawTimeline(){\n            const maintimeRange = this.timeRangeWhole;\n            const timeRange = this.timeRange ?? maintimeRange;\n\n            // 定义比例尺\n            const xScale = d3.scaleTime()\n                .domain(maintimeRange)\n                .range([0, this.width])\n                .clamp(true)\n\n            // 定义轴\n            const xAxis = d3.axisBottom(xScale)\n                .tickFormat(d => (d.getFullYear() % 20 === 0) ? d3.timeFormat(\"%Y\")(d) : \"\")  // 每20年显示一次文本\n                .tickValues(d3.timeYear.every(2).range(maintimeRange[0], maintimeRange[1]))  // 每2年一个刻度\n                .tickSize(-3)  // 设置刻度大小，使其朝向上方\n                .tickSizeInner(-3)  // 确保内部刻度线朝向上方\n                .tickPadding(-15)  // 设置刻度与轴标签之间的间距\n\n            // 绘制轴\n            let axisGroup = d3.select(this.$el).selectAll('.axis')\n            if (axisGroup.node() === null){\n                axisGroup = d3.select(this.$el)\n                    .append('g')\n                    .classed('axis', true)\n                    .attr('color', 'white')\n            }\n            axisGroup.html(\"\");\n            axisGroup.call(xAxis);\n\n            axisGroup.selectAll(\".tick text\")\n              .style(\"font-size\", `${this.totalHeight * 11 / 1080}px`)\n              .style(\"font-family\", \"SourceHanSansCN\")\n              .style(\"font-weight\", \"bold\");\n\n            let axisClickingArea = d3.select(this.$el).select('.axis-clicking-area');\n            if (axisClickingArea.node() === null) {\n              axisClickingArea = d3.select(this.$el)\n                .append('rect')\n                .classed('axis-clicking-area', true)\n                .attr('width', this.width)\n                .attr('height', 10)\n                .attr('x', 0)\n                .attr('y', -5)\n                .style('fill', 'transparent')\n                .style('cursor', 'pointer');\n            }\n\n            // 添加标题\n            let title = d3.select(this.$el).selectAll('.title')\n            if (title.node() === null) {\n                title = d3.select(this.$el)\n                    .append('text')  // 创建文本元素\n                    .classed('title', true)\n                    .attr('text-anchor', 'middle')  // 确保文本居中对齐\n            }\n\n            title.style('font-size', `${this.totalHeight * 11 / 1080}px`)  // 设置字体大小\n                // .attr('x', this.totalWidth * 102 / 1920)  // !!!!!\n                .attr('x', this.totalWidth * 68 / 1920)   \n                .attr('y', this.totalHeight * (-26) / 1080)  // 在时间轴上方适当的位置\n                .style('fill', 'white')  // 设置字体颜色\n                .style('font-weight', 'bold')  // 设置字体粗细\n                .attr('font-family', 'SourceHanSansCN')  // 设置字体\n                .text('Construction Time (Years)');  // 设置标题文本\n                // .text('修建时间（年）Construction Time (Years)');  // 设置标题文本 !!!!!\n\n            // 定义圆形滑块\n            let slider = d3.select(this.$el).selectAll('.slider')\n            if (slider.node() === null) {\n                slider = d3.select(this.$el)\n                    .append('circle')\n                    .classed('slider', true)\n                    .attr('r', 6)\n                    .attr('cy', 1)\n                    .style('fill', 'black')\n                    .style('stroke', 'white')\n                    .style('stroke-width', '2px')\n                    .style('cursor', 'pointer')\n            }\n            slider\n                .attr('cx', xScale(timeRange[1]))\n\n            axisClickingArea.on('click', null);  // 移除之前的点击事件\n            axisClickingArea.on('click', (event) => {\n              let x = d3.pointer(event, this.$el)[0];  // 获取点击位置的x坐标\n              let time = xScale.invert(x);  // 将位置转换为时间\n\n              // 获取时间轴的范围（即最小和最大时间对应的像素值）\n              const [minX, maxX] = xScale.range();\n\n              // 检查x坐标是否在时间轴的范围内\n              if (x < minX) {\n                  x = minX;  // 如果小于最小值，则设置为最小值\n                  time = xScale.invert(minX);  // 更新时间为对应的最小时间\n              } else if (x > maxX) {\n                  x = maxX;  // 如果大于最大值，则设置为最大值\n                  time = xScale.invert(maxX);  // 更新时间为对应的最大时间\n              }\n\n              // 更新滑块位置\n              slider.attr('cx', x);\n\n              // 更新时间范围\n              this.updateTimeRange([maintimeRange[0], time]);\n\n              // 计算并更新地铁线路数和城市数\n              this.calculateCounts([maintimeRange[0], time]);\n            });\n\n          this.drag = d3.drag()\n              .on('start', () => {\n                this.updateTimelineOnDrag(true);\n              })\n              .on('drag', (event) => {  // Use event object here\n                let x = d3.pointer(event, this.$el)[0];  // 当前鼠标位置\n                let time = xScale.invert(x); // 将位置转换为时间\n\n                // 获取时间轴的范围（即最小和最大时间对应的像素值）\n                const [minX, maxX] = xScale.range();\n\n                // 检查x坐标是否在时间轴的范围内\n                if (x < minX) {\n                  x = minX;  // 如果小于最小值，则设置为最小值\n                  time = xScale.invert(minX);  // 更新时间为对应的最小时间\n                } else if (x > maxX) {\n                  x = maxX;  // 如果大于最大值，则设置为最大值\n                  time = xScale.invert(maxX);  // 更新时间为对应的最大时间\n                }\n\n                slider.attr('cx', x);  // update position of the circle slider\n                this.updateTimeRange([maintimeRange[0], time]);  // update the global variable\n                this.calculateCounts([maintimeRange[0], time]);\n\n                // 打印当前状态下的 metroLinesCount 和 citiesCount\n              })\n              .on('end', () => {\n                this.updateTimelineOnDrag(false);\n              });\n          slider.call(this.drag);\n        },\n    },\n\n    mounted() {\n      this.drawTimeline();\n    },\n    watch: {\n        size: {\n            handler() {\n                this.drawTimeline();\n            },\n        }\n    }\n}\n\n</script>\n\n","import { render } from \"./Timeline.vue?vue&type=template&id=eaf2d30e\"\nimport script from \"./Timeline.vue?vue&type=script&lang=js\"\nexport * from \"./Timeline.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <g class='squares'>\n        <Square\n            v-for=\"(city, i) in sortedCities\"\n            :key=\"city['城市名称']\"\n            :datum=\"city\"\n            :width=\"squareSize\"\n            :height=\"squareSize\"\n            :textSize=\"textSize\"\n            :transform=\"getTransform(i)\"\n            :globalX=\"globalX\"\n            :globalY=\"globalY\"\n            :globalWidth=\"globalWidth\"\n            :globalHeight=\"globalHeight\"\n            :popout=\"citySelected === city['城市名称']\"\n        ></Square>\n    </g>\n</template>\n\n\n<script>\nimport { ref, onMounted, watch, computed } from 'vue'\nimport { mapMutations, mapState, mapGetters } from 'vuex'\nimport Square from '@/components/Square.vue';\nimport * as d3 from 'd3'\nimport _ from 'lodash';\n\nexport default {\n  name: 'Squares',\n  components: {\n    Square,\n  },\n  data() {\n    return {\n        rows: 0,\n        columns: 0,\n        squareSize: 0,\n        textSize: 0,\n        marginX: 0,\n        marginY: 0,\n    }\n  },\n  props: {\n    width: {\n        type: Number,\n        default: 0,\n    },\n    height: {\n        type: Number,\n        default: 0,\n    },\n    globalX: {\n        type: Number,\n        default: 0,\n    },\n    globalY: {\n        type: Number,\n        default: 0,\n    },\n    globalWidth: {\n        type: Number,\n        default: 0,\n    },\n    globalHeight: {\n        type: Number,\n        default: 0,\n    },\n  },\n  computed: {\n    ...mapState({\n        timeRange: (state) => state.timeRange,\n        continentSelected: (state) => state.continentSelected,\n        countrySelected: (state) => state.countrySelected,\n        citySelectedButton: (state) => state.citySelectedButton,\n        cityHovered: (state) => state.cityHovered,\n        citySelected: (state) => state.citySelected,\n        data: (state) => state.data,\n    }),\n    ...mapGetters([\n        'cities',\n    ]),\n    sortedCities() {\n        // 假设 getCities 是一个 getter，它返回一个包含所有城市的数组\n        let cities = this.cities;\n\n        // 对城市数组进行排序\n        cities.sort((a, b) => {\n            // 假设我们要根据 'loc_num' 进行排序\n            // 如果 'loc_num' 是空的，我们将它们视为0\n            const locNumA = a['loc_num'] || 0;\n            const locNumB = b['loc_num'] || 0;\n\n            return locNumA - locNumB;\n        });\n\n        return cities;\n    },\n    size() {\n        return {\n            width: this.width,\n            height: this.height,\n        }\n    }\n  },\n\n  methods: {\n    layout() {\n        // 计算容器的大小和总的间距\n        // x * x / w * h / 1.2 = totalNumber\n\n        const width = this.width;\n        const height = this.height;\n        const textMarginRate = 0.2;\n        const marginRate = 0.1;\n        // let columns = Math.ceil(Math.sqrt(this.data.length * width * (1 + textMarginRate) / height));\n        // let rows = Math.ceil(this.data.length / columns);\n        let columns = 26\n        let rows = 9\n        // const size = Math.min(width / columns, height / rows / (1 + textMarginRate)) * (1 - marginRate);\n        const size = width * 0.031;\n        // const marginX = (width - columns * size) / (columns - 1);\n        const marginY = (height - rows * size) / rows;\n        const marginX = width * 0.0078125;\n        // const marginY = height * 0.02962963;\n\n        this.rows = rows;\n        this.columns = columns;\n        this.squareSize = size;\n        this.textSize = marginY;\n        this.marginX = marginX;\n        this.marginY = marginY;\n    },\n    getTransform(i) {\n        if (this.columns === 0) {\n            return `translate(0, 0)`;\n        }\n        let x = (i % this.columns) * (this.squareSize + this.marginX);\n        let y = Math.floor(i / this.columns) * (this.squareSize + this.marginY);\n        return `translate(${x}, ${y})`;\n    },\n    hoverEvent(cityName) {\n      if (cityName === null) {\n        d3.select(this.$el)\n            .selectAll('.square-wrapper')\n            .order();\n      }\n      else {\n        d3.select(this.$el)\n            .selectAll('.square-wrapper')\n            .filter(function() {\n              return this.getAttribute('id') === cityName;\n            })\n            .raise();\n      }\n    }, // 200ms 的防抖时间间隔\n  },\n  mounted() {\n    this.layout();\n  },\n  watch: {\n    size() {\n        this.layout();\n    },\n    cityHovered() {\n        this.hoverEvent(this.cityHovered);\n    },\n  },\n}\n  </script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>","<template>\n    <Teleport :disabled=\"!popout\" to=\"#singleCity\">\n      <g class=\"square-wrapper\"\n         :id=\"datum['城市名称']\"\n         :transform=\"transform\"\n         ref=\"wrapper\"\n      >\n        <g class=\"back\" ref=\"back\"></g>\n        <g class=\"square-unit\" ref=\"unit\"></g>\n        <g class=\"button\" ref=\"button\"></g>\n      </g>\n    </Teleport>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport {Line, LineSegment, Point} from \"@/requirements/geometry\";\nimport SVGTextLength from \"@/requirements/SVGTextLength\";\nimport {mapActions, mapState} from \"vuex\";\n\nexport default {\n    name: 'Square',\n    data() {\n      return {\n        svgTextLength: new SVGTextLength(),\n        hoverLock: false,\n      };\n    },\n    props: {\n        datum: {\n            type: Object,\n            default: () => {},\n        },\n        width: {\n            type: Number,\n            default: 0,\n        },\n        height: {\n            type: Number,\n            default: 0,\n        },\n        textSize: {\n            type: Number,\n            default: 0,\n        },\n        transform: {\n            type: String,\n            default: \"\",\n        },\n        globalX: {\n            type: Number,\n            default: 0,\n        },\n        globalY: {\n            type: Number,\n            default: 0,\n        },\n        globalWidth: {\n            type: Number,\n            default: 0,\n        },\n        globalHeight: {\n            type: Number,\n            default: 0,\n        },\n        popout: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    computed: {\n        ...mapState([\n            \"timeRange\",\n            \"duration\",\n            \"lineHovered\",\n            \"lineClicked\",\n            \"timelineOnDrag\",\n        ]),\n        lineSelected() {\n          if (!this.popout) return null;\n          return this.lineHovered ?? this.lineClicked;\n        },\n        size() {\n          return {\n            width: this.width,\n            height: this.height,\n          };\n        },\n        realWidth() {\n          return this.popout ? this.globalWidth : this.width;\n        },\n        realHeight() {\n          return this.popout ? this.globalHeight : this.height;\n        },\n        innerSize() {\n          return Math.min(this.realWidth, this.realHeight);\n        },\n        strokeWidthScale() {\n          const size = this.innerSize;\n          return d3.scaleLinear()\n              // .domain([0, 0.001,0.005, 0.05, 0.3, 0.7,1])\n              // .range([size/40,size/35,size/15, size/10, size/4,size/2, size/1.5])\n              .domain([0,0.0002,0.005,0.05,0.5, 1]) \n              .range([size/65,size/45,size/20,size/4, size/8*3, size/3]); \n          // 定义线条宽度的比例尺\n          // 根据“归一化覆盖率”的值定义线条的宽度。这个比例尺将覆盖率映射到一系列的宽度值。\n        },\n        radiusScale() {\n          const size = this.innerSize;\n          return d3.scaleLinear()\n              .domain([0,0.001,0.005,0.05,  0.3, 1])\n              .range([size/10,size/8,size/4,size/3, size/2.5, size/2]);\n          // 定义圆的半径比例尺\n          // 类似于线宽比例尺，这个比例尺根据覆盖率来确定圆的半径大小。\n        },\n        isBlackClicked() {\n          return this.$store.state.isBlackClicked;\n        },\n        continentSelected() {\n          return this.$store.state.continentSelected;\n        },\n        countrySelected() {\n          return this.$store.state.countrySelected;\n        },\n        citySelectedButton() {\n          return this.$store.state.citySelectedButton;\n        },\n    },\n    methods: {\n        ...mapActions([\n           \"updateCityHovered\",\n           \"updateCitySelected\",\n           \"updateLineHovered\",\n           \"updateLineClicked\",\n        ]),\n        select(parent, class_, type) {\n          let elem = parent.select(\".\" + class_);\n          if (elem.empty()) {\n            elem = parent.append(type)\n                .classed(class_, true);\n          }\n          return elem;\n        },\n        getExitIcon(size, color) {\n          return `\n            <svg viewBox=\"0 0 1024 1024\" width=\"${size}\" height=\"${size}\">\n                <path d=\"M143.616 47.104l830.08 830.08c26.24 26.24 26.24 69.888 0 96.128-26.24 26.24-69.888 26.24-96.128 0L47.488 143.232c-17.536-26.24-17.536-69.888 0-96.128 26.24-26.24 69.888-26.24 96.128 0z m0 0\" fill=\"${color}\"></path>\n                <path d=\"M982.528 143.232L152.32 973.312c-26.24 26.24-69.888 26.24-96.128 0-26.24-26.24-26.24-69.888 0-96.128L886.4 47.104c26.24-26.24 69.888-26.24 96.128 0 17.408 26.24 17.408 69.888 0 96.128z m0 0\" fill=\"${color}\"></path>\n            </svg>\n          `;\n        },\n        draw(width, height, duration=0) {\n            if (this.innerSize === 0) return;\n            this.calculateLines(width, height);\n            this.drawLines(width, height, duration);\n            this.drawBorder(width, height, duration);\n\n            if (this.popout) {\n              this.hoverLock = true;\n              setTimeout(() => {\n                this.drawExitButton(width, height);\n                this.hoverLock = false;\n              }, duration);\n            }\n            else {\n              this.hoverLock = true;\n              this.drawExitButton(width, height);\n              this.updateLineHovered(null);\n              this.updateLineClicked(null);\n            }\n        },\n        /**\n         * 绘制边界，包括下方的文字\n         * @returns {void}\n         */\n        drawBorder(width, height, duration=0) {\n          const datum = this.datum;\n          const textSize = this.textSize;\n          const square = d3.select(this.$refs.unit);\n          const select = (parent, class_, type) => {\n            let elem = parent.select(\".\" + class_);\n            if (elem.empty()) {\n              elem = parent.append(type)\n                  .classed(class_, true);\n            }\n            return elem;\n          }\n\n          // 添加方块\n          if (this.popout) {\n            select(square, \"border\", \"rect\")\n                .remove();\n          }\n          else {\n            select(square, \"border\", \"rect\")\n                .attr('width', width) // (xScale(117) - xScale(115))*0.5\n                .attr('height', height) //  (yScale(39) - yScale(41))*0.5\n                .style('fill', 'white')\n                .style('opacity', '0')\n                .style('stroke-opacity', '0')\n                .style('stroke', 'white')\n                .style('cursor', 'pointer')\n                .on('mouseover', () => {\n                  this.updateCityHovered(datum[\"城市名称\"]);\n                  square.transition()\n                      .duration(200)\n                      .attr(\"transform\", `translate(${-width * 0.1}, ${-height * 0.1}) scale(1.28)`);\n                })\n                .on('mouseout', () => {\n                  this.updateCityHovered(null);\n                  square.transition()\n                      .duration(200)\n                      .attr(\"transform\", `translate(0, 0) scale(1)`);\n                })\n                .on('click', () => {\n                  console.log(datum[\"洲英文\"].split(\", \")[1])\n                  console.log(datum[\"洲英文\"].split(\", \")[0])\n                  console.log(datum[\"城市英文标准\"].split(\", \")[0])\n                  console.log(\"countrySelected: \"+ this.countrySelected)\n\n                  if(this.isBlackClicked){\n                    if(this.citySelectedButton!=null && datum[\"城市英文标准\"].split(\", \")[0]!=this.citySelectedButton ){\n                      event.stopPropagation();\n                    }\n                    else if(this.countrySelected!=null && datum[\"洲英文\"].split(\", \")[0]!=this.countrySelected){\n                      event.stopPropagation();\n                    }\n                    else if(this.continentSelected!=null && datum[\"洲英文\"].split(\", \")[1]!=this.continentSelected){\n                      event.stopPropagation();\n                    }\n                    else{\n                      this.updateCitySelected(datum[\"城市名称\"]);\n                    }\n                  }\n                  else{\n                    this.updateCitySelected(datum[\"城市名称\"]);\n                  }\n                });\n          }\n\n          // 添加下面的文字\n          const fontsize = this.popout ? (height * 0.04) : (textSize * 0.2);\n          const marginY = (textSize - fontsize * 2) / 3;\n          const x0 = this.popout ? this.globalX : 0;\n          const y0 = this.popout ? fontsize : (height + marginY);\n          const lineHeight = this.popout ? fontsize * 1.2 : (fontsize + marginY);\n          // !!!!!\n          // const cityName = select(square, \"city-name\", \"text\")\n          //     .attr(\"dominant-baseline\", \"hanging\")\n          //     .attr(\"fill\", \"white\")\n          //     .text(datum[\"城市名称\"])\n          //     .style(\"font-family\", \"SourceHanSansCN\")\n          //     .style(\"font-weight\", \"bold\");\n          const cityNameEn = select(square, \"city-nameen\", \"text\")\n              .attr(\"dominant-baseline\", \"hanging\")\n              .attr(\"fill\", \"white\")\n              .text(datum[\"城市英文标准\"].split(\", \")[0])\n              .style(\"font-family\", \"HelveticaNeue\")\n              .attr(\"font-size\", fontsize)\n              .attr(\"x\", x0)\n              .attr(\"y\", y0);\n          const countryNameEn = select(square, \"country-nameen\", \"text\")\n              .attr(\"dominant-baseline\", \"hanging\")\n              .attr(\"fill\", \"white\")\n              .text(datum[\"城市英文标准\"].split(\", \")[1])\n              .style(\"font-family\", \"HelveticaNeue\")\n              .attr(\"font-size\", fontsize)\n              .attr(\"x\", x0)\n              .attr(\"y\", y0+ lineHeight/1.9);\n\n          const title = select(square, \"city-title\", \"g\");\n          const cityNameEn_all = select(title, \"city-nameen-all\", \"text\")\n              .attr(\"dominant-baseline\", \"hanging\")\n              .attr(\"fill\", \"white\")\n              .text(datum[\"城市英文标准\"])\n              .style(\"font-family\", \"HelveticaNeue\");\n\n          //根据时间筛选lineNum\n          const lineNum = datum[\"地铁线路\"].filter((d)=>{ \n            return this.timeRange === null || new Date(d[\"首发时间\"]) <= this.timeRange[1];\n          }).length;\n\n          // console.log(lineNum);\n          \n          const endYear = this.timeRange?.[1]?.getFullYear?.() || \"2023\";\n          const cityStat = select(title, \"city-stat\", \"text\")\n              .attr(\"dominant-baseline\", \"baseline\")\n              .attr(\"fill\", \"white\")\n              .html(`In <tspan>${endYear}</tspan>, <tspan>${lineNum}</tspan> metro lines were built.`)\n              .style(\"font-family\", \"HelveticaNeue\");\n\n          if (this.popout) {\n            // !!!!!\n            // cityName.transition()\n            //     .duration(duration)\n            //     .attr(\"font-size\", fontsize)\n            //     .attr(\"x\", x0)\n            //     .attr(\"y\", y0);\n            // window.requestAnimationFrame(() => {\n              cityNameEn.attr(\"opacity\", 0)\n              countryNameEn.attr(\"opacity\", 0)\n              cityNameEn_all.transition()\n                  .duration(duration)\n                  .attr(\"opacity\", 1)\n                  .attr(\"font-size\", fontsize*1.2)\n                  .attr(\"x\", x0)\n                  .attr(\"y\", y0);\n\n              cityStat.transition()\n                  .duration(duration)\n                  .attr(\"opacity\", 1)\n                  .attr(\"font-size\", fontsize * 0.5)\n                  .attr(\"x\", x0)\n                  .attr(\"y\", y0 + fontsize * 2.1);\n\n              cityStat.selectAll(\"tspan\")\n                  .transition()\n                  .duration(duration)\n                  .attr(\"font-size\", fontsize * 0.8);\n            // })\n          }\n          else {\n            // !!!!!\n            // cityName\n            //     .attr(\"font-size\", fontsize)\n            //     .attr(\"x\", x0)\n            //     .attr(\"y\", y0);\n            // window.requestAnimationFrame(() => {\n              cityNameEn.transition()\n                  .duration(duration)\n                  .attr(\"opacity\", 1)\n\n              countryNameEn.transition()\n                  .duration(duration)\n                  .attr(\"opacity\", 1)\n\n              /// cityNameEn_all 是为了放大页面时，不用计算文字并排的位置所以新写的一个英文名+城市名的text\n              cityNameEn_all.attr(\"opacity\", 0)\n                .attr(\"font-size\", 0)\n              cityStat.attr(\"opacity\", 0)\n                  .attr(\"font-size\", 0)\n            // })\n          }\n        },\n        /**\n         * 计算所有线路的绘制位置，并直接放在数据上\n         * @returns {void}\n         */\n        calculateLines(width, height) {\n            const datum = this.datum;\n            const size = Math.min(width, height);\n\n            // 地理位置实际中心点\n            const realCenter = new Point(\n                parseFloat(datum[\"经度\"]),\n                parseFloat(datum[\"纬度\"]),\n            );\n            // 绘制中心点\n            const center = new Point(\n                width * 0.5,\n                height * 0.5,\n            );\n            // 绘制矩形边框的角点（初始是正方形）\n            const corners = [\n              new Point(0, 0),\n              new Point(width, 0),\n              new Point(width, height),\n              new Point(0, height),\n            ];\n            // 绘制矩形边框的边\n            const borders = corners.map((c, i) => {\n              const next = corners[(i + 1) % corners.length];\n              return new LineSegment(c, next);\n            });\n\n            // 计算缩放比例：保证所有的线路都可以显示在矩形边界框内\n            const lines = this.datum[\"地铁线路\"];\n            lines.forEach((line, i) => {\n              line.idx = i;\n            });\n            const r = lines.length <= 3 ? 0.1 : 0.6;\n\n            // 对线路进行排序，使得半径较小的线路后绘制\n            lines.sort((a, b) => {\n              const radiusA = a[\"归一化覆盖率\"];\n              const radiusB = b[\"归一化覆盖率\"];\n              return radiusB - radiusA;\n            });\n\n            // 计算一个初始的 lineScale\n            // let initialLineScale = 3000;\n\n            // // 创建一个投影\n            // const projection = d3.geoMercator()\n            //     .center([parseFloat(datum[\"经度\"]), parseFloat(datum[\"纬度\"])]) // 设置中心为地图的中心\n            //     .scale(initialLineScale * size) // 使用 lineScale 设置比例尺\n            //     .translate([width / 2, height / 2]); // 设置平移，使得地图居中\n\n            // 使用 projection 更新 lineScale\n            let lineScale = lines.reduce((acc, l) => {\n              // const realStartCoordinates = projection([parseFloat(l[\"起点站经度\"]), parseFloat(l[\"起点站纬度\"])]);\n              // const realEndCoordinates = projection([parseFloat(l[\"终点站经度\"]), parseFloat(l[\"终点站纬度\"])]);\n              // const realStart = new Point(realStartCoordinates[0], realStartCoordinates[1]);\n              // const realEnd = new Point(realEndCoordinates[0], realEndCoordinates[1]);\n              \n              const svgHeight = this.height\n              const svgWidth = this.width\n\n              const realStart = new Point(\n                parseFloat(l[\"起点站经度\"]),\n                parseFloat(l[\"起点站纬度\"]),\n              );\n              const realEnd = new Point(\n                parseFloat(l[\"终点站经度\"]),\n                parseFloat(l[\"终点站纬度\"]),\n              );\n\n              l.realStart = realStart;\n              l.realEnd = realEnd;\n\n              if (l['中间站1']){\n                //console.log(l['中间站1'])\n                // const realMiddle1Coordinates = projection([parseFloat(l[\"中间站1经度\"]), parseFloat(l[\"中间站1纬度\"])]);\n                // const realMiddle1 = new Point(realMiddle1Coordinates[0], realMiddle1Coordinates[1]);\n                const realMiddle1 = new Point(\n                  parseFloat(l[\"中间站1经度\"]),\n                  parseFloat(l[\"中间站1纬度\"])\n                )\n                l.realMiddle1 = realMiddle1;\n                l.isCurve = true;\n              }\n              \n              if (l['中间站1'] && l['中间站2']) {\n                // const realMiddle1Coordinates = projection([parseFloat(l[\"中间站1经度\"]), parseFloat(l[\"中间站1纬度\"])]);\n                // const realMiddle1 = new Point(realMiddle1Coordinates[0], realMiddle1Coordinates[1]);\n                // const realMiddle2Coordinates = projection([parseFloat(l[\"中间站2经度\"]), parseFloat(l[\"中间站2纬度\"])]);\n                // const realMiddle2 = new Point(realMiddle2Coordinates[0], realMiddle2Coordinates[1]);\n                const realMiddle1 = new Point(\n                  parseFloat(l[\"中间站1经度\"]),\n                  parseFloat(l[\"中间站1纬度\"])\n                )\n                const realMiddle2 = new Point(\n                  parseFloat(l[\"中间站2经度\"]),\n                  parseFloat(l[\"中间站2纬度\"])\n                )\n                l.realMiddle1 = realMiddle1;\n                l.realMiddle2 = realMiddle2;\n                l.isCurve = true;\n              }\n\n              if (realEnd.distanceToPoint(realStart) === 0) {\n                l.isCircle = true;\n                l.legendCorner = corners[3];\n                return acc;\n              }\n\n              // const realLine = Line.createFromPoints(realStart, realEnd);\n              const realLine = Line.createFromPoints(realEnd, realStart);\n              const realDist = realCenter.distanceToLine(realLine);\n\n              // 找到在保证线路不超出矩形边界框的情况下，线路与中心距离最小的情况\n              let corner;\n              let proj = realCenter.projectionOnLine(realLine);\n              if (proj.x < realCenter.x && proj.y < realCenter.y) {\n                corner = corners[0];\n              }\n              else if (proj.x >= realCenter.x && proj.y < realCenter.y) {\n                corner = corners[1];\n              }\n              else if (proj.x >= realCenter.x && proj.y >= realCenter.y) {\n                corner = corners[2];\n              }\n              else {\n                corner = corners[3];\n              }\n              let line = Line.createParallelLineThroughPoint(realLine, corner);\n\n              l.isCircle = false;\n              l.realLine = realLine;\n              l.legendCorner = (corner === corners[0] || corner === corners[3]) ? corners[2] : corners[3];\n\n              return Math.min(acc, center.distanceToLine(line) * r / realDist);\n            }, Infinity);\n\n          if (lineScale === Infinity) {\n            lineScale = 1;\n          }\n\n          lines.forEach(d => {\n            if (d.isCircle) {\n                d.center = center;\n            } else {\n                const realLine = d.realLine;\n                const realP = realCenter.projectionOnLine(realLine);\n                const p = new Point(\n                    center.x + (realP.x - realCenter.x) * lineScale,\n                    center.y + (realP.y - realCenter.y) * lineScale,\n                );\n                const line = Line.createParallelLineThroughPoint(realLine, p);\n\n                // 计算线路直线与矩形边界的交点\n                const intersectionPoints = borders\n                    .map(b => b.intersectionWithLine(line))\n                    .filter(p => p !== null);\n\n                // 如果线路有中间站点，那么计算新的中间站点的坐标\n                let middle1 = null;\n                let middle2 = null;\n                if (d.realMiddle1 && !d.realMiddle2) {\n                    middle1 = new Point(\n                        (d.realMiddle1.x - realCenter.x) * lineScale + center.x,\n                        (d.realMiddle1.y - realCenter.y) * lineScale + center.y,\n                    );\n                    d.lineSegment = new LineSegment(intersectionPoints[0], intersectionPoints[1],middle1);\n                    d.lineSegment = d.lineSegment.extension_curve(size * 0.4, size * 0.2);\n                    //console.log(d.lineSegment)\n                    //console.log(middle1)\n                }\n                // else if (d.realMiddle1 && d.realMiddle2) {\n                //     middle1 = new Point(\n                //         (d.realMiddle1.x - realCenter.x) * lineScale + center.x,\n                //         (d.realMiddle1.y - realCenter.y) * lineScale + center.y,\n                //     );\n                //     middle2 = new Point(\n                //           (d.realMiddle2.x - realCenter.x) * lineScale + center.x,\n                //           (d.realMiddle2.y - realCenter.y) * lineScale + center.y,\n                //       );\n                //     d.lineSegment = new LineSegment(intersectionPoints[0], intersectionPoints[1],middle1,middle2);\n                //     //console.log(d.lineSegment)\n                //     //console.log(middle1)\n\n                // }\n               else {\n                    d.lineSegment = new LineSegment(...intersectionPoints);\n                    // 把求得的线段延伸一点，不然会看出来线段端点\n                    // !!!!!\n                    d.lineSegment = d.lineSegment.extension(size * 0.2);\n                }\n\n            }\n        });\n\n        },\n\n        /**\n         * 绘制线路\n         * @returns {void}\n         */\n        drawLines(width, height, duration=0) {\n          const datum = this.datum;\n          // console.log(datum)\n          const id = datum['城市名称'].replace(' ', '-');\n          const select = this.select;\n          const timeRange = this.timeRange;\n\n          // 添加裁剪路径\n          const clipPathId = `square-clip-path-${id}`; // 裁剪路径的唯一 ID\n          const square = d3.select(this.$refs.unit);\n          const back = d3.select(this.$refs.back);\n          const defs = select(square, \"clip-path-defs\", \"defs\") // 选择或创建 <defs> 元素\n          const clipPath = select(defs, \"clip\", \"clipPath\") // 在 <defs> 内添加 <clipPath>\n              .attr(\"id\", clipPathId) // 设置裁剪路径的 ID\n\n          const clipPathRect = select(clipPath, \"rect\", \"rect\");\n          if (duration > 0) {\n            clipPathRect.transition()\n                .duration(duration)\n                .attr('width', width) // 设置 <rect> 的宽度\n                .attr('height', height); // 设置 <rect> 的高度\n          }\n          else {\n            clipPathRect\n                .attr('width', width)\n                .attr('height', height);\n          }\n          // 这部分代码在每个正方形中添加一个裁剪路径，用于确保在正方形内绘制的图形不会超出其边界。\n\n          // 获得比例尺\n          const strokeWidthScale = this.strokeWidthScale;\n          const radiusScale = this.radiusScale;\n          const svgTextLength = this.svgTextLength;\n\n          // 绘制路线\n          square.selectAll(\".line\")\n              .data(datum[\"地铁线路\"], d => d.idx)\n              .join(\"g\")\n              .classed(\"line\", true)\n              .each((d, i, elements) => {\n                const g = d3.select(elements[i])\n                    .attr(\"id\", `${id}-${d[\"线路\"]}-${d.idx}`);\n\n                let inTimeRange;\n                if (d['首发时间'] !== undefined) {\n                  const start = new Date(d[\"首发时间\"]);\n                  if (timeRange === null) {\n                    inTimeRange = true;\n                  } else if (timeRange[0] <= start && start <= timeRange[1]) {\n                    inTimeRange = true;\n                  } else {\n                    inTimeRange = false;\n                  }\n                } else {\n                  inTimeRange = true;\n                }\n\n                // 根据 this.$store.state.continentSelected 和 this.$store.state.countrySelected 和 this.$store.state.citySelectedButton 的值来决定线条的颜色\n                let color, opacity;\n                if (this.isBlackClicked) {\n                  color = \"white\";  // 白色\n                  opacity = inTimeRange ? 0.75 : 0;  // 透明度为0.85\n\n                  if (this.citySelectedButton !== null && this.citySelectedButton === datum[\"城市英文标准\"].split(\", \")[0]) {\n                    opacity = inTimeRange ? 0.75 : 0;  // 如果在时间范围内，则设置为0.75，否则设置为0\n                  } \n                  else if (this.citySelectedButton === null && this.countrySelected !== null && this.countrySelected === datum[\"城市英文标准\"].split(\", \")[1]) {\n                    opacity = inTimeRange ? 0.75 : 0;  // 如果在时间范围内，则设置为0.75，否则设置为0\n                  } \n                  else if (this.citySelectedButton === null && this.countrySelected === null && this.continentSelected !== null && this.continentSelected === datum[\"洲英文\"].split(\", \")[1]) {\n                    opacity = inTimeRange ? 0.75 : 0;  // 如果在时间范围内，则设置为0.75，否则设置为0\n                  }\n                  else if (this.continentSelected === null && this.countrySelected === null && this.citySelectedButton === null) {\n                    opacity = inTimeRange ? 0.75 : 0;  // 如果在时间范围内，则设置为0.75，否则设置为0\n                  } \n                  else {\n                    opacity = 0;\n                  }\n                } \n                // 只选城市\n                // else if (this.citySelectedButton !== null && this.citySelectedButton === datum[\"城市\"].split(\" \")[0]) {\n                  else if (this.citySelectedButton !== null && this.citySelectedButton === datum[\"城市英文标准\"].split(\", \")[0]) {\n                  color = d.color;  // 原始颜色\n                  opacity = inTimeRange ? 0.95 : 0;  // 如果在时间范围内，则设置为0.95，否则设置为0\n                } \n                // 只选国家\n                // else if (this.citySelectedButton === null && this.countrySelected !== null && this.countrySelected === datum[\"城市名称\"].split(\" \")[0]) {\n                else if (this.citySelectedButton === null && this.countrySelected !== null && this.countrySelected === datum[\"城市英文标准\"].split(\", \")[1]) {\n                  color = d.color;  // 原始颜色\n                  opacity = inTimeRange ? 0.95 : 0;  // 如果在时间范围内，则设置为0.95，否则设置为0\n                } \n                // 只选洲\n                // else if (this.citySelectedButton === null && this.countrySelected === null && this.continentSelected !== null && this.continentSelected === datum[\"洲\"].split(\" \")[0]) {\n                else if (this.citySelectedButton === null && this.countrySelected === null && this.continentSelected !== null && this.continentSelected === datum[\"洲英文\"].split(\", \")[1]) {\n                  color = d.color;  // 原始颜色\n                  opacity = inTimeRange ? 0.95 : 0;  // 如果在时间范围内，则设置为0.95，否则设置为0\n                }\n                // 都不选\n                else if (this.continentSelected === null && this.countrySelected === null && this.citySelectedButton === null) {\n                  color = d.color;  // 原始颜色\n                  opacity = inTimeRange ? 0.95 : 0;  // 如果在时间范围内，则设置为0.95，否则设置为0\n                } \n                \n                else {\n                  color = \"white\";  // 白色\n                  opacity = inTimeRange ? 0.75 : 0;  // 透明度为0.85\n                }\n\n\n\n                // let opacity = inTimeRange ? 0.95 : 0;\n                \n\n                if (d.isCircle) {\n                  const radius = radiusScale(d[\"归一化覆盖率\"]);\n                  const circle = select(g, \"circle-extension\", \"circle\")\n                      // .attr('id', `${id}-${d[\"线路\"]}-line`)\n                      .style(\"fill\", \"none\")\n                      .style(\"stroke\", color)\n                      .style(\"stroke-opacity\", opacity)\n                      .attr(\"clip-path\", `url(#square-clip-path-${id})`);\n\n                  if (duration > 0) {\n                    // window.requestAnimationFrame(() => {\n                      circle.transition()\n                          .duration(duration)\n                          .attr(\"cx\", d.center.x)\n                          .attr(\"cy\", d.center.y)\n                          .attr(\"r\", radius)\n                          .style(\"stroke-width\", strokeWidthScale(d[\"归一化覆盖率\"]));\n                    // });\n                  }\n                  else {\n                    circle\n                        .attr(\"cx\", d.center.x)\n                        .attr(\"cy\", d.center.y)\n                        .attr(\"r\", radius)\n                        .style(\"stroke-width\", strokeWidthScale(d[\"归一化覆盖率\"]));\n                  }\n                }\n                else if (d.isCurve) {\n                  // d3.select('svg').selectAll('*').remove();\n\n                  // console.log(d)\n                  // 计算实际绘制的线路的直线方程\n                  const lineSegment = d.lineSegment;\n                  const start = lineSegment.start.x < lineSegment.end.x ? lineSegment.start : lineSegment.end;\n                  const end = lineSegment.start.x < lineSegment.end.x ? lineSegment.end : lineSegment.start;\n                  const middle1 = lineSegment.middle1\n                  if (lineSegment.middle2)\n                    {\n                      const middle2 = lineSegment.middle2\n                      var points = [start, middle1, middle2, end]\n                    }\n                  else {\n                    var points = [start, middle1, end]\n                  }\n\n                  // 创建一个 d3.line 生成器\n                  const lineGenerator = d3.line()\n                    .x(d => d.x)\n                    .y(d => d.y);\n\n                  // 绘制线路线段\n                  const line = select(g, \"line-extension\", \"path\")\n                      .style(\"fill\", \"none\")\n                      .style(\"stroke\", color)\n                      .style(\"stroke-opacity\", opacity)\n                      .style(\"stroke-linecap\", \"suqare\") // round  butt  square\n                      .attr(\"clip-path\", `url(#square-clip-path-${id})`);\n\n                  if (duration > 0) {\n                    // window.requestAnimationFrame(() => {\n                      line.transition()\n                          .duration(duration)\n                          .attr(\"d\", lineGenerator(points))\n                          .style(\"stroke-width\", strokeWidthScale(d[\"归一化覆盖率\"]))\n                    // });\n                  }\n                  else {\n                    line\n                        .attr(\"d\", lineGenerator(points))\n                        .style(\"stroke-width\", strokeWidthScale(d[\"归一化覆盖率\"]))\n                  }\n                }\n\n                else {\n                  // 计算实际绘制的线路的直线方程\n                  const lineSegment = d.lineSegment;\n                  const start = lineSegment.start.x < lineSegment.end.x ? lineSegment.start : lineSegment.end;\n                  const end = lineSegment.start.x < lineSegment.end.x ? lineSegment.end : lineSegment.start;\n\n                  // 绘制线路线段\n                  const line = select(g, \"line-extension\", \"line\")\n                      // .attr('id', `${id}-${d[\"线路\"]}-line`)\n                      .style(\"stroke\", color)\n                      .style(\"stroke-opacity\", opacity)\n                      .style(\"stroke-linecap\", \"square\")\n                      .attr(\"clip-path\", `url(#square-clip-path-${id})`);\n\n                  if (duration > 0) {\n                    line.transition()\n                        .duration(duration)\n                        .attr(\"x1\", start.x)\n                        .attr(\"y1\", start.y)\n                        .attr(\"x2\", end.x)\n                        .attr(\"y2\", end.y)\n                        .style(\"stroke-width\", strokeWidthScale(d[\"归一化覆盖率\"]))\n                  }\n                  else {\n                    line\n                        .attr(\"x1\", start.x)\n                        .attr(\"y1\", start.y)\n                        .attr(\"x2\", end.x)\n                        .attr(\"y2\", end.y)\n                        .style(\"stroke-width\", strokeWidthScale(d[\"归一化覆盖率\"]))\n                  }\n\n                  \n                }\n\n                if (this.popout) {\n                  g.style(\"cursor\", inTimeRange ? \"pointer\" : null)\n                      .on(\"mouseover\", () => {\n                        if (this.hoverLock || !inTimeRange || this.timelineOnDrag) return;\n                        this.updateLineHovered(d.idx);\n                      })\n                      .on(\"mouseout\", () => {\n                        if (this.hoverLock || !inTimeRange || this.timelineOnDrag) return;\n                        this.updateLineHovered(null);\n                      })\n                      .on(\"click\", () => {\n                        if (this.hoverLock || !inTimeRange || this.timelineOnDrag) return;\n                        this.updateLineClicked(this.lineClicked === d.idx ? null : d.idx);\n                      });\n                }\n                else {\n                  g.style(\"cursor\", null)\n                      .on(\"mouseover\", null)\n                      .on(\"mouseout\", null)\n                      .on(\"click\", null);\n                }\n                if (this.popout){\n                  // 线路名称\n                  //标出经纬度\n                  // const text = `${d[\"线路英文名\"]}：(${d[\"起点站经度\"]}, ${d[\"起点站纬度\"]}) - (${d[\"终点站经度\"]}, ${d[\"终点站纬度\"]})`;\n                  // const text = `${d[\"线路英文名\"]}：(${d[\"原始起点站经度\"]}, ${d[\"原始起点站纬度\"]}) - (${d[\"原始终点站经度\"]}, ${d[\"原始终点站纬度\"]})`;\n                  const text = `${d[\"线路英文名\"]}`;\n                  const fontsize = Math.min(width, height) * 0.02;\n                  const length = svgTextLength.visualWidth(text, fontsize);\n                  const totalLength = d.isCircle ? length : d.lineSegment.length();\n                  // const dy = d.isCircle ? -fontsize * 0.5 : (-fontsize * 0.5 - strokeWidthScale(d[\"归一化覆盖率\"]) * 0.5);\n                  // const dy = (strokeWidthScale(d[\"归一化覆盖率\"]) * 0.5);\n                  const dy = ((strokeWidthScale(d[\"归一化覆盖率\"]) * 0.5) + (fontsize * 0.5)) / 2;\n                  let path = select(back, \"detail-path-\" + d.idx, \"path\")\n                      .attr('opacity', 0)\n                      .attr('id', `${id}-${d.idx}-line`);\n                  if (d.isCircle) {\n                    const radius = radiusScale(d[\"归一化覆盖率\"]) + strokeWidthScale(d[\"归一化覆盖率\"]) * 0.5;\n                    const center = d.center;\n                    const dR = length * 0.5 / radius;\n                    const dx = radius * Math.sin(dR);\n                    const dy = radius * Math.cos(dR);\n                    const x0 = center.x - dx;\n                    const y0 = center.y - dy;\n                    const x1 = center.x + dx;\n                    const y1 = center.y + dy;\n                    path.attr('d', `M${x0} ${y0} A${radius} ${radius} 0 0 1 ${x1} ${y1} A${radius} ${radius} 0 0 1 ${x0} ${y0}`);\n                  }\n                  else {\n                    if (d.isCurve) {\n                      const start = d.lineSegment.start.x < d.lineSegment.end.x ? d.lineSegment.start : d.lineSegment.end;\n                      const end = d.lineSegment.start.x < d.lineSegment.end.x ? d.lineSegment.end : d.lineSegment.start;\n                      const middle1 = d.lineSegment.middle1\n                      path.attr('d', `M${start.x} ${start.y} L${middle1.x} ${middle1.y}`);\n                    }\n                    else{\n                      const start = d.lineSegment.start.x < d.lineSegment.end.x ? d.lineSegment.start : d.lineSegment.end;\n                      const end = d.lineSegment.start.x < d.lineSegment.end.x ? d.lineSegment.end : d.lineSegment.start;\n                      path.attr('d', `M${start.x} ${start.y} L${end.x} ${end.y}`);\n                    }\n                  }\n\n                // //原来通过删除所有的 text 元素然后重新创建\n                  let bordertextopacity = inTimeRange ? 0.45 : 0;\n                //   // 删除已存在的 text 元素\n                //   square.selectAll(`text.detail-${d.idx}-border`).remove();\n                //   square.selectAll(`text.detail-${d.idx}`).remove();\n                  \n                  const borderTextElement = select(g, `detail-${d.idx}-border`, \"text\")\n                      .attr(\"class\", `detail-${d.idx}-border`)\n                      .attr(\"font-size\", fontsize*0.8)\n                      .attr(\"dy\", dy)\n                      .attr(\"fill\", \"white\") // 边框颜色\n                      .attr(\"opacity\", bordertextopacity)\n                      .style(\"letter-spacing\", \"5px\");\n\n                  setTimeout(() => {\n                    select(borderTextElement, `detail-path-${d.idx}-border`, \"textPath\")\n                      .attr(\"xlink:href\", `#${id}-${d.idx}-line`)\n                      .attr(\"startOffset\", (totalLength - length) / 3.5)\n                      .html(text)\n                      .style(\"font-family\", \"HelveticaNeue\")\n                      .style(\"font-weight\", \"400\") // 边框粗细\n                      .style(\"opacity\", 1)\n                  }, duration);\n                  \n\n                }\n\n          });\n\n          // if (this.popout) {\n          //   const g = square.append(\"g\")\n          //     .attr(\"class\", \"center\")\n          //     .attr(\"transform\", `translate(${width/2}, ${height/2})`)\n          //   g.append(\"circle\")\n          //       .attr(\"cx\", 0)\n          //       .attr(\"cy\", 0)\n          //       .attr(\"r\", 10)\n          //       .attr(\"fill\", \"red\")\n          //\n          //   g.append(\"text\")\n          //     .attr(\"y\", 15)\n          //     .attr(\"text-anchor\", \"middle\")\n          //     .attr(\"dominant-baseline\", \"hanging\")\n          //     .attr(\"font-size\", 20)\n          //     .attr(\"fill\", \"red\")\n          //     .text(`(${datum[\"经度\"]}, ${datum[\"纬度\"]}),(${datum[\"原始经度\"]}, ${datum[\"原始纬度\"]})`)\n          // }\n          // else {\n          //   square.select(\".center\").remove();\n          // }\n       \n        },\n        drawExitButton(width, height) {\n          const size = Math.min(width, height) * 0.03;\n          const select = this.select;\n          const g = d3.select(this.$refs.button)\n              .attr(\"transform\", `translate(${width - size * 2.5}, ${size})`);\n\n          const exit = select(g, 'exit', 'g')\n          if (this.popout) {\n            exit.style('cursor', 'pointer')\n                .on('mouseover', () => {\n                  exit.selectAll('path')\n                      .transition()\n                      .duration(300)\n                      .attr('fill', '#aaa');\n                })\n                .on('mouseout', () => {\n                  exit.selectAll('path')\n                      .transition()\n                      .duration(300)\n                      .attr('fill', '#fff');\n                })\n                .on('click', () => {\n                  this.updateCitySelected(null);\n                });\n            select(exit, 'back', 'rect')\n                .attr('width', size)\n                .attr('height', size)\n                .attr('opacity', 0);\n            select(exit, 'exit-icon', 'g')\n                .html(this.getExitIcon(size, '#fff'))\n                .style('opacity', 0.8);\n          }\n          else {\n            exit.remove();\n          }\n        },\n        updateTransform(duration) {\n          let transform;\n          if (this.popout) {\n            transform = `translate(${-this.globalX}, ${-this.globalY})`;\n          }\n          else {\n            transform = this.transform;\n          }\n          this.$refs.unit.setAttribute(\"transform\", '');\n          d3.select(this.$refs.wrapper)\n              .transition()\n              .duration(duration)\n              .attr(\"transform\", transform);\n        },\n        updateLines(width, height) {\n          const square = d3.select(this.$refs.unit);\n          const back = d3.select(this.$refs.back);\n          const lineSelected = this.lineHovered ?? this.lineClicked;\n          const dehighlightOpacity = 0.2;\n          const select = this.select;\n          const strokeWidthScale = this.strokeWidthScale;\n          const radiusScale = this.radiusScale;\n          const datum = this.datum;\n          const id = datum['城市名称'].replace(' ', '-');\n          const self = this;\n          const svgTextLength = this.svgTextLength;\n\n          if (lineSelected === null) {\n            square.selectAll(\".line\")\n                .style(\"opacity\", 1);\n            // select(square, \"detail\", \"text\").remove();\n            // select(back, \"detail-path\", \"path\").remove();\n            select(square, \"info\", \"text\").remove();\n          }\n          else {\n            square.selectAll(\".line\")\n                .style(\"opacity\", (d) => {\n                  return d.idx === lineSelected ? 1 : dehighlightOpacity;\n                })\n                .each((d) => {\n                  if (d.idx === lineSelected) {\n                    //const text = `线路名称 Line Name: ${d[\"线路\"]}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;线路覆盖率 Line Coverage: ${d[\"归一化覆盖率\"]}`;\n  \n                    const infoFontsize = Math.min(width, height) * 0.016;\n                    // const list = [\"线路\", \"首发时间\", \"延长线时间\", \"起点站\", \"终点站\", \"车站数\", \"长度（千米）\", \"车型编组\", \"行驶时间（分钟）\", \"换乘站数目\", \"峰值车速\", \"配车数量\"];\n\n                    const list = [\"线路英文名\", \"首发时间\", \"起点站\", \"终点站\", \"车站数\", \"长度（千米）\"];\n                    const customText = {\n                        \"线路英文名\": \"Line Name\",\n                        \"首发时间\": \"Start Time\",\n                        \"起点站\": \"Start Station\",\n                        \"终点站\": \"End Station\",\n                        \"车站数\": \"Number of Stations\",\n                        \"长度（千米）\": \"Length (km)\"\n                    };\n                    const info = {};\n                    for (let k of list) {\n                        const customKey = customText[k];\n                        info[customKey] = d[k];\n                    }\n\n                    // !!!!!\n                    // for (let k of list) {\n                    //   info[k] = d[k];\n                    // }\n                    const texts = JSON.stringify(info, null, 4)\n                        .split('\\n')\n                        .map(t => t.replaceAll(' ', '&nbsp;'));\n                    const textWidth = Math.max(...texts.map(t => svgTextLength.visualWidth(t, infoFontsize))) + infoFontsize * 2;\n                    const textHeight = texts.length * infoFontsize * 1.2 + infoFontsize * 2;\n                    const textX = d.legendCorner.x === 0 ? infoFontsize * 2 : d.legendCorner.x - textWidth;\n                    const textY = d.legendCorner.y - textHeight;\n\n                    select(square, \"info\", \"text\")\n                        .selectAll(\"tspan\")\n                        .data(texts)\n                        .join(\"tspan\")\n                        .attr(\"x\", textX)\n                        .attr(\"y\", (d, i) => textY + infoFontsize * i * 1.2)\n                        .attr(\"font-size\", infoFontsize)\n                        .attr(\"dominant-baseline\", \"hanging\")\n                        .attr(\"fill\", \"#fff\")\n                        .html(d => d)\n                        .style(\"font-family\", \"HelveticaNeue\");\n                  }\n                })\n          }\n        },\n    },\n    mounted() {\n        this.draw(this.realWidth, this.realHeight);\n    },\n    watch: {\n        size: {\n            handler() {\n                this.draw(this.realWidth, this.realHeight);\n                this.updateTransform(0);\n            }\n        },\n        timeRange: {\n            handler() {\n              this.draw(this.realWidth, this.realHeight);\n            },\n        },\n        popout: {\n          handler() {\n            this.draw(this.realWidth, this.realHeight, this.duration);\n            this.updateTransform(this.duration);\n            if (!this.popout) {\n              this.$refs.unit.querySelectorAll('text').forEach(text => {\n                  // 检查 text 元素是否是线路名称\n                  if (text.getAttribute('class').startsWith('detail-')) {\n                      text.remove();\n                  }\n              });\n            }\n          },\n        },\n\n        lineSelected() {\n        setTimeout(() => {\n            this.updateLines(this.realWidth, this.realHeight);\n            if (this.lineSelected != null) {\n                this.datum[\"地铁线路\"].forEach((d, i) => {\n                    const isSelected = d.idx === this.lineSelected;\n                    const textElement = this.$refs.unit.querySelector(`.detail-${d.idx}`);\n                    const borderTextElement = this.$refs.unit.querySelector(`.detail-${d.idx}-border`);\n                    if (textElement) {  // 检查 text 元素是否存在\n                        textElement.style.display = isSelected ? '' : 'none';\n                        borderTextElement.style.display = isSelected ? '' : 'none';\n                    }\n                });\n            } else {\n                this.datum[\"地铁线路\"].forEach((d, i) => {\n                    const textElement = this.$refs.unit.querySelector(`.detail-${d.idx}`);\n                    const borderTextElement = this.$refs.unit.querySelector(`.detail-${d.idx}-border`);\n                    if (textElement) {  // 检查 text 元素是否存在\n                        textElement.style.display = '';\n                        borderTextElement.style.display = '';\n                    }\n                });\n            }\n        }, 0);\n    },\n        isBlackClicked: {\n          handler() {\n            this.drawLines(this.realWidth, this.realHeight);\n          },\n          immediate: true,\n        },\n        continentSelected() {\n          this.drawLines(this.realWidth, this.realHeight);\n        },\n        countrySelected() {\n          this.drawLines(this.realWidth, this.realHeight);\n        },\n        citySelectedButton() {\n          this.drawLines(this.realWidth, this.realHeight);\n        },\n    }\n}\n</script>\n","export class Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  toString() {\n    const fixed = 2;\n    return `(${this.x.toFixed(fixed)}, ${this.y.toFixed(fixed)})`;\n  }\n\n  /**\n   * 计算两点之间的距离\n   * @param p\n   * @returns {number}\n   */\n  distanceToPoint(p) {\n    return Math.sqrt((p.x - this.x) * (p.x - this.x) + (p.y - this.y) * (p.y - this.y));\n  }\n  /**\n   * 点到直线的距离\n   * @param line {Line}\n   * @returns {number}\n   */\n  distanceToLine(line, epsilon = 1e-13) {\n    const d = Math.abs(line.A * this.x + line.B * this.y + line.C) / Math.sqrt(line.A * line.A + line.B * line.B);\n    if (d < epsilon) return 0;\n    return d;\n  }\n\n  /**\n   * 点到直线上的投影点\n   * @param line {Line}\n   * @returns {Point}\n   */\n  projectionOnLine(line) {\n    const A = line.A;\n    const B = line.B;\n    const C = line.C;\n    const x = this.x;\n    const y = this.y;\n    const x0 = (B * (B * x - A * y) - A * C) / (A * A + B * B);\n    const y0 = (A * (-B * x + A * y) - B * C) / (A * A + B * B);\n    return new Point(x0, y0);\n  }\n\n}\nexport class LineSegment {\n  /**\n   * @constructor\n   * @param start {Point}\n   * @param end {Point}\n   */\n  constructor(start, end, middle1 = null, middle2 = null) {\n    this.start = start;\n    this.end = end;\n    this.middle1 = middle1;\n    this.middle2 = middle2;\n  }\n\n  toString() {\n    return `${this.start.toString()} -> ${this.end.toString()}`;\n  }\n\n  /**\n   * 计算线段的长度\n   * @return {number}\n   */\n  length() {\n    return this.start.distanceToPoint(this.end);\n  }\n  length_curve1() {\n    return this.middle1.distanceToPoint(this.start);\n  }\n  length_curve2() {\n    return this.middle1.distanceToPoint(this.end);\n  }\n\n  /**\n   * 计算与直线的交点\n   * @param line\n   * @returns {Point|null}\n   */\n  intersectionWithLine(line) {\n    const A = line.A;\n    const B = line.B;\n    const C = line.C;\n    const x1 = this.start.x;\n    const y1 = this.start.y;\n    const x2 = this.end.x;\n    const y2 = this.end.y;\n    const segmentVector = { x: x2 - x1, y: y2 - y1 };\n    const t = -(A * x1 + B * y1 + C) / (A * segmentVector.x + B * segmentVector.y);\n    if (t >= 0 && t <= 1) {\n      return new Point(\n          x1 + t * segmentVector.x,\n          y1 + t * segmentVector.y\n      );\n    } else {\n      return null;\n    }\n  }\n  /**\n   * 线段向两头分别延伸length长度\n   * @param length\n   */\n  // 直线\n  extension(length) {\n    const x1 = this.start.x;\n    const y1 = this.start.y;\n    const x2 = this.end.x;\n    const y2 = this.end.y;\n    const segmentVector = { x: x2 - x1, y: y2 - y1 };\n    console.log(segmentVector)\n    const norm = Math.sqrt(segmentVector.x * segmentVector.x + segmentVector.y * segmentVector.y);\n    console.log(norm)\n    const x3 = x1 - segmentVector.x / norm * length;\n    const y3 = y1 - segmentVector.y / norm * length;\n    const x4 = x2 + segmentVector.x / norm * length;\n    const y4 = y2 + segmentVector.y / norm * length;\n    return new LineSegment(new Point(x3, y3), new Point(x4, y4));\n  }\n\n// 折线\nextension_curve(length_curve1, length_curve2) {\n  const x1 = this.middle1.x;\n  const y1 = this.middle1.y;\n  const x2_start = this.start.x;\n  const y2_start = this.start.y;\n  const x2_end = this.end.x\n  const y2_end = this.end.y\n  const segmentVector1 = { x11: x1 - x2_start, y11: y1 - y2_start };\n  const segmentVector2 = { x22: x2_end - x1, y22: y2_end - y1 };\n\n  const norm1 = Math.sqrt(segmentVector1.x11 * segmentVector1.x11 + segmentVector1.y11 * segmentVector1.y11);\n  const norm2 = Math.sqrt(segmentVector2.x22 * segmentVector2.x22 + segmentVector2.y22 * segmentVector2.y22);\n\n  // middle1, start\n  const x3 = x1 - segmentVector1.x11 / norm1 * length_curve1;\n  const y3 = y1 - segmentVector1.y11 / norm1 * length_curve1;\n  const x4 = x2_start - segmentVector1.x11 / norm1 * length_curve1;\n  const y4 = y2_start - segmentVector1.y11 / norm1 * length_curve1;\n\n  // middle1, end\n  const x5 = x1 + segmentVector2.x22 / norm2 * length_curve2;\n  const y5 = y1 + segmentVector2.y22 / norm2 * length_curve2;\n  const x6 = x2_end + segmentVector2.x22 / norm2 * length_curve2;\n  const y6 = y2_end + segmentVector2.y22 / norm2 * length_curve2;\n\n  return new LineSegment(new Point(x4, y4), new Point(x6, y6), new Point(x1, y1));\n}\n\n  \n}\nexport class Line {\n  /**\n   * @constructor Ax + By + C = 0\n   * @param A {Number}\n   * @param B {Number}\n   * @param C {Number}\n   */\n  constructor(A, B, C) {\n    this.A = A;\n    this.B = B;\n    this.C = C;\n  }\n\n  toString() {\n    const fixed = 2;\n    return `${this.A.toFixed(fixed)}x + ${this.B.toFixed(fixed)}y + ${this.C.toFixed(fixed)} = 0`;\n  }\n\n  /**\n   * 从两个点创建一条直线\n   * @param p1 {Point}\n   * @param p2 {Point}\n   * @returns {Line}\n   */\n  static createFromPoints(p1, p2) {\n    const A = p2.y - p1.y;\n    const B = p1.x - p2.x;\n    const C = p2.x * p1.y - p1.x * p2.y;\n    return new Line(A, B, C);\n  }\n\n  /**\n   * 创建经过点p与直线line平行的一条直线\n   * @param line {Line}\n   * @param p {Point}\n   * @returns {Line}\n   */\n  static createParallelLineThroughPoint(line, p) {\n    const A = line.A\n    const B = line.B;\n    const C = -line.A * p.x - line.B * p.y;\n    return new Line(A, B, C);\n  }\n\n  /**\n   * 计算两条直线的交点\n   * @param line {Line}\n   * @returns {Point|null}\n   */\n  intersection(line) {\n    const A1 = this.A;\n    const B1 = this.B;\n    const C1 = this.C;\n    const A2 = line.A;\n    const B2 = line.B;\n    const C2 = line.C;\n    const s = A1 * B2 - A2 * B1;\n    if (s === 0) return null;\n    const x = (B2 * C1 - B1 * C2) / s;\n    const y = (A1 * C2 - A2 * C1) / s;\n    return new Point(x, y);\n  }\n}","/**\n * SVGTextLength.js：SVG文本长度计算类\n */\nconst config = {\n    svg: null,\n}\nfunction SVGTextLength(fontSize, fontFamily) {\n    const ruler = _getRuler();\n    const outer = this;\n    this.fontSize = fontSize;\n    this.fontFamily = fontFamily;\n\n    // 计算文本的显示宽度\n    this.visualWidth = function(\n        text, // 原始文本\n        fontSize, // 字体大小\n        fontFamily, // 字体\n    ) {\n        _setRuler(text, fontSize, fontFamily);\n        return ruler.getBoundingClientRect().width;\n    }\n\n    // 计算文本的显示高度\n    this.visualHeight = function(\n        text, // 原始文本\n        fontSize, // 字体大小\n        fontFamily, // 字体\n    ) {\n        _setRuler(text, fontSize, fontFamily);\n        return ruler.getBoundingClientRect().height;\n    }\n\n    // 将文本截断为指定宽度\n    this.truncate = function (\n        text, // 原始文本\n        width, // 截断宽度\n        ellipsis, // 后缀省略符（默认为“...”）\n        fontSize, // 字体大小\n        fontFamily, // 字体\n    ) {\n        const textWidth = this.visualWidth(text, fontSize, fontFamily);\n        if (textWidth <= width) {\n        return text;\n        }\n        ellipsis = ellipsis || '...';\n        const ellipsisWidth = this.visualWidth(ellipsis, fontSize, fontFamily);\n        const len = _truncate_index(text, width - ellipsisWidth, fontSize, fontFamily);\n        if (len === 0) {\n        return ellipsisWidth <= width ? ellipsis : '';\n        }\n        return text.slice(0, len) + ellipsis;\n    }\n\n    // 多行文本换行，只支持break word换行\n    this.wrap = function(\n        text, // 原始文本\n        width, // 截断宽度\n        maxLines, // 最大行数，如果为Infinity则不限制行数\n        ellipsis, // 后缀省略符（默认为“...”）\n        fontSize, // 字体大小\n        fontFamily, // 字体\n    ) {\n        ellipsis = ellipsis || '...';\n        const ellipsisWidth = this.visualWidth(ellipsis, fontSize, fontFamily);\n        \n        let p = 0;\n        const lines = [];\n        while (p < text.length) {\n        const textleft = text.slice(p);\n        if (lines.length === maxLines - 1) {\n            const subtext = this.truncate(textleft, width, ellipsis, fontSize, fontFamily);\n            lines.push(subtext);\n            break;\n        }\n        else {\n            let len = _truncate_index(textleft, width, fontSize, fontFamily);\n            if (len === 0) {\n            if (ellipsisWidth <= width) {\n                lines.push(ellipsis);\n            }\n            break;\n            }\n            lines.push(textleft.slice(0, len));\n            p += len;\n        }\n        }\n        return lines;\n    }\n\n    // 将文本转换为svg格式\n    this.lines2svg = function(\n        lines, // 原始文本\n        lineHeight, // 行高\n    ) {\n        lineHeight = lineHeight || this.fontSize * 1.2;\n        return lines.map((line, i) => {\n        return \"<tspan x='0' dy='\" + lineHeight * Math.min(i, 1) + \"'>\" + line + \"</tspan>\";\n        }).join('');\n    }\n\n    /* 下面是内部私有函数 */\n\n    function _getRuler() {\n        const svg = config.svg || document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '0');\n        svg.setAttribute('height', '0');\n        svg.style.float = 'left';\n        const ruler = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        svg.appendChild(ruler);\n        if (config.svg === null) {\n            document.body.insertBefore(svg, document.body.firstChild);\n            config.svg = svg;\n        }\n        return ruler;\n    }\n    function _setRuler(text, fontSize, fontFamily) {\n        fontSize = fontSize || outer.fontSize;\n        fontFamily = fontFamily || outer.fontFamily;\n        ruler.style.fontSize = fontSize;\n        ruler.style.fontFamily = fontFamily;\n        ruler.innerHTML = text;\n    }\n    function _truncate_index(text, width, fontSize, fontFamily) { // 返回截断文本的长度\n        if (width <= 0) return 0;\n        _setRuler(text, fontSize, fontFamily);\n        let textWidth = ruler.getBoundingClientRect().width;\n\n        // 边界条件判断\n        if (textWidth <= width) {\n        return text.length;\n        }\n        else if (ruler.getEndPositionOfChar(0).x > width) {\n        return 0;\n        }\n        // 二分查找确定长度（此时保证了长度一定不小于1，且达不到最大长度）\n        let start = 0;\n        let end = text.length - 1;\n        while (start < end) {\n        const mid = Math.ceil((start + end) / 2);\n        const newTextWidth = ruler.getEndPositionOfChar(mid).x;\n        if (newTextWidth <= width) {\n            start = mid;\n        }\n        else {\n            end = mid - 1;\n        }\n        }\n        return start + 1;\n    }\n}\nexport default SVGTextLength;","import { render } from \"./Square.vue?vue&type=template&id=032cd92d\"\nimport script from \"./Square.vue?vue&type=script&lang=js\"\nexport * from \"./Square.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Squares.vue?vue&type=template&id=250396c4\"\nimport script from \"./Squares.vue?vue&type=script&lang=js\"\nexport * from \"./Squares.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=190befc0\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=190befc0&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(), //hash模式，有#,如http://localhost:8080/#/，而另一种history模式需要后端(服务器端)支持,需要配置\n  routes\n})\n\nexport default router\n","import { createStore } from 'vuex'\nimport * as d3 from 'd3';\n\nconst store = createStore({\n  state: {\n    data: null,\n    continentSelected: null, // 选中洲\n    countrySelected: null, // 选中国家\n    citySelectedButton: null, // 选中城市\n    cityHovered: null, // 鼠标悬浮的城市\n    citySelected: null, // 选中城市\n    timeRange: null, // 选中的时间范围\n    duration: 1000, // 动画时长\n    lineHovered: null, // 鼠标悬浮的线路\n    lineClicked: null,  // 选中的线路\n    timelineOnDrag: false, // 是否在拖拽时间轴\n    isBlackClicked: false, // 白or彩切换\n    metroLinesCount: null, // 到某一时间的地铁线路数量\n    citiesCount: null, // 到某一时间的城市数量\n    //全局的状态变量\n  },\n  // getters: {\n  //   cities(state) {\n  //     return state.data.filter(d => {\n  //       if (state.countrySelected === null && state.citySelectedButton === null) {\n  //         return true;\n  //       }\n  //       if (state.countrySelected !== null && state.countrySelected === d[\"城市名称\"].split(\" \")[0]) {\n  //         return true;\n  //       }\n  //       if (state.citySelectedButton !== null && state.citySelectedButton === d[\"城市\"].split(\" \")[0]) {\n  //         return true;\n  //       }\n  //       return false; //filter决定是否保留元素\n  //     });\n  //   },\n  // },\n  getters: {\n    cities(state) {\n      return state.data;  // 直接返回所有元素\n    },\n  },  \n  mutations: { //同步的修改state的操作，只有在这里才能修改state\n    updateData(state, payload) {\n      state.data = payload; //payload是传入的参数\n    },\n    updateContinentSelected(state, payload) {\n      state.continentSelected = payload;\n    },\n    updateCountrySelected(state, payload) {\n      state.countrySelected = payload;\n    },\n    updateCitySelectedButton(state, payload) {\n      state.citySelectedButton = payload;\n    },\n    updateCityHovered(state, payload) {\n      state.cityHovered = payload;\n    },\n    updateCitySelected(state, payload) {\n      state.citySelected = payload;\n    },\n    updateTimeRange(state, payload) {\n      state.timeRange = payload;\n    },\n    updateLineHovered(state, payload) {\n      state.lineHovered = payload;\n    },\n    updateLineClicked(state, payload) {\n      state.lineClicked = payload;\n    },\n    updateTimelineOnDrag(state, payload) {\n      state.timelineOnDrag = payload;\n    },\n    updateIsBlackClicked(state, payload) {\n      state.isBlackClicked = payload;\n    },\n    updateMetroLinesCount(state, payload) {\n      state.metroLinesCount = payload;\n    },\n    updateCitiesCount(state, payload) { \n      state.citiesCount = payload;\n    }\n  },\n  actions: { //允许异步操作\n    updateData({ commit }, payload) {\n      commit('updateData', payload);\n    },\n    updateContinentSelected({ commit }, payload) {\n      commit('updateContinentSelected', payload);\n    },\n    updateCountrySelected({ commit }, payload) {\n      commit('updateCountrySelected', payload);\n    },\n    updateCitySelectedButton({ commit }, payload) {\n      commit('updateCitySelectedButton', payload);\n    },\n    updateCityHovered({ commit }, payload) {\n      commit('updateCityHovered', payload);\n    },\n    updateCitySelected({ commit }, payload) {\n      commit('updateCitySelected', payload);\n    },\n    updateTimeRange({ commit }, payload) {\n      commit('updateTimeRange', payload);\n    },\n    updateLineHovered({ commit }, payload) {\n      commit('updateLineHovered', payload);\n    },\n    updateLineClicked({ commit }, payload) {\n      commit('updateLineClicked', payload);\n    },\n    updateTimelineOnDrag({ commit }, payload) {\n      commit('updateTimelineOnDrag', payload);\n    },\n    updateIsBlackClicked({ commit }, payload) {\n      commit('updateIsBlackClicked', payload);\n    },\n    updateMetroLinesCount({ commit }, payload) {\n      commit('updateMetroLinesCount', payload);\n    },\n    updateCitiesCount({ commit }, payload) {\n      commit('updateCitiesCount', payload);\n    },\n  },\n  modules: {\n  }\n})\n\nd3.json('./data.json').then(data => {\n  data = data.filter(d => d[\"地铁线路\"] !== undefined);\n  // const projection = d3.geoEquirectangular();\n  const projection = d3.geoMercator();\n  data.forEach(d => {\n    d[\"原始经度\"] = d[\"经度\"];\n    d[\"原始纬度\"] = d[\"纬度\"];\n    [d[\"经度\"], d[\"纬度\"]] = projection([d[\"经度\"], d[\"纬度\"]]);\n    for (let l of d[\"地铁线路\"]) {\n      l[\"原始起点站经度\"] = l[\"起点站经度\"];\n      l[\"原始起点站纬度\"] = l[\"起点站纬度\"];\n      l[\"原始终点站经度\"] = l[\"终点站经度\"];\n      l[\"原始终点站纬度\"] = l[\"终点站纬度\"];\n      [l[\"起点站经度\"], l[\"起点站纬度\"]] = projection([l[\"起点站经度\"], l[\"起点站纬度\"]]);\n      [l[\"终点站经度\"], l[\"终点站纬度\"]] = projection([l[\"终点站经度\"], l[\"终点站纬度\"]]);\n\n      if (l[\"中间站1经度\"] !== undefined) {\n        l[\"原始中间站1经度\"] = l[\"中间站1经度\"];\n        l[\"原始中间站1纬度\"] = l[\"中间站1纬度\"];\n        [l[\"中间站1经度\"], l[\"中间站1纬度\"]] = projection([l[\"中间站1经度\"], l[\"中间站1纬度\"]]);\n      }\n    }\n  });\n  store.dispatch('updateData', data); //更新数据，传给updateData 给 action 再给mutation\n});\n\nexport default store;\n\n\n \n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport ElementPlus from \"element-plus\"\nimport \"element-plus/dist/index.css\"\n\ncreateApp(App)\n    .use(store)\n    .use(router)\n    .use(ElementPlus)\n    .mount('#app') //装载到dom上，id为app的元素上\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmetrov2\"] = self[\"webpackChunkmetrov2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2370); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","class","id","in","_createElementVNode","stdDeviation","xmlns","href","_hoisted_8","target","_hoisted_11","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","attributeName","values","dur","_ctx","duration","calcMode","fill","_hoisted_5","_createVNode","_component_Title","filter","citySelected","opacity","transform","$options","paddingX","paddingY","width","innerWidth","height","titleHeight","totalHeight","$data","totalWidth","data","_Fragment","key","_component_Timeline","timelineHeight","_component_Squares","squaresHeight","globalX","globalY","globalWidth","globalHeight","x","y","style","_normalizeStyle","color","fontSize","innerHeight","lineSelected","titleFontsize","infoFontSize","_toDisplayString","timeRange","Date","getFullYear","_hoisted_4","metroLinesCount","citiesCount","_hoisted_6","searchY","searchWidth1","marginSearchButton1","searchWidth2","marginSearchButton2","searchWidth3","marginSearchButton3","buttonWidth","buttonTextWidth","searchHeight","_component_el_autocomplete","searchTextContinent","$event","getContinents","placeholder","onSelect","selectContinent","suffix","_withCtx","_component_el_icon","_component_Search","default","item","nameEn","searchText","getCountries","selectCountry","marginLeft","searchTextCity","getCities","selectCity","onClick","_cache","args","toggleLineColor","rx","Math","min","ry","stroke","logoRGB","logoGray","buttonTextFontSize","subtitleY","subtitleFontsize","legendX4","legendfour","legendHeight4","legendWidth4","legendX5","legendfive","legendHeight5","legendWidth5","legendone","require","legendtwo","legendthree","__default__","name","isButtonClicked","components","Search","ElButton","reactive","props","type","Number","computed","mapState","state","continentSelected","countrySelected","citySelectedButton","isBlackClicked","this","continents","Array","from","Set","map","d","split","countries","cities","legendX1","legendHeight1","legendWidth1","legendX2","legendHeight2","legendWidth2","legendX3","legendHeight3","legendWidth3","searchWidth","methods","mapActions","queryString","cb","c","continentData","find","nameCn","result","toLowerCase","includes","unshift","continent","updateContinentSelected","countryData","country","updateCountrySelected","cityData","city","updateCitySelectedButton","icons","d3","$el","select","selectAll","transition","attr","each","i","elements","image","$store","dispatch","mounted","watch","handler","val","drag","carPath","size","timeRangeWhole","lines","ls","l","date","flat","sort","a","b","calculateCounts","length","reduce","some","updateMetroLinesCount","updateCitiesCount","console","log","drawTimeline","maintimeRange","xScale","domain","range","clamp","xAxis","tickFormat","tickValues","every","tickSize","tickSizeInner","tickPadding","axisGroup","node","append","classed","html","call","axisClickingArea","title","text","slider","on","event","time","invert","minX","maxX","updateTimeRange","updateTimelineOnDrag","_renderList","sortedCities","_component_Square","datum","squareSize","textSize","getTransform","$props","popout","ref","_Teleport","disabled","to","Point","constructor","toString","fixed","toFixed","distanceToPoint","p","sqrt","distanceToLine","line","epsilon","abs","A","B","C","projectionOnLine","x0","y0","LineSegment","start","end","middle1","middle2","length_curve1","length_curve2","intersectionWithLine","x1","y1","x2","y2","segmentVector","t","extension","norm","x3","y3","x4","y4","extension_curve","x2_start","y2_start","x2_end","y2_end","segmentVector1","x11","y11","segmentVector2","x22","y22","norm1","norm2","x6","y6","Line","createFromPoints","p1","p2","createParallelLineThroughPoint","intersection","A1","B1","C1","A2","B2","C2","s","config","svg","SVGTextLength","fontFamily","ruler","_getRuler","outer","document","createElementNS","setAttribute","float","appendChild","body","insertBefore","firstChild","_setRuler","innerHTML","_truncate_index","textWidth","getBoundingClientRect","getEndPositionOfChar","mid","ceil","newTextWidth","visualWidth","visualHeight","truncate","ellipsis","ellipsisWidth","len","slice","wrap","maxLines","textleft","subtext","push","lines2svg","lineHeight","join","svgTextLength","hoverLock","Object","String","Boolean","lineHovered","lineClicked","realWidth","realHeight","innerSize","strokeWidthScale","radiusScale","parent","class_","elem","empty","getExitIcon","draw","calculateLines","drawLines","drawBorder","setTimeout","drawExitButton","updateLineHovered","updateLineClicked","square","$refs","unit","remove","updateCityHovered","stopPropagation","updateCitySelected","fontsize","marginY","cityNameEn","countryNameEn","cityNameEn_all","lineNum","endYear","cityStat","realCenter","parseFloat","center","corners","borders","next","forEach","idx","r","radiusA","radiusB","lineScale","acc","realStart","realEnd","realMiddle1","isCurve","realMiddle2","isCircle","legendCorner","realLine","realDist","corner","proj","Infinity","realP","intersectionPoints","lineSegment","replace","clipPathId","back","defs","clipPath","clipPathRect","g","inTimeRange","undefined","radius","circle","points","lineGenerator","timelineOnDrag","totalLength","dy","path","dR","dx","sin","cos","bordertextopacity","borderTextElement","button","exit","updateTransform","wrapper","updateLines","dehighlightOpacity","infoFontsize","list","customText","info","k","customKey","texts","JSON","stringify","replaceAll","max","textHeight","textX","textY","querySelectorAll","getAttribute","startsWith","isSelected","textElement","querySelector","display","immediate","Square","rows","columns","marginX","cityHovered","mapGetters","locNumA","locNumB","layout","floor","hoverEvent","cityName","order","raise","getWidth","getElementById","clientWidth","getHeight","clientHeight","Title","Timeline","Squares","resize","window","addEventListener","bind","routes","component","HomeView","router","createRouter","history","createWebHashHistory","store","createStore","getters","mutations","updateData","payload","updateIsBlackClicked","actions","commit","modules","then","projection","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","j","keys","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","get","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}